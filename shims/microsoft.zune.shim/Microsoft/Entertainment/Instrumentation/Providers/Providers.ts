// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { IProviders } from "./IProviders";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Instrumentation.Providers.Providers')
export class Providers implements IProviders { 
    isAddAlbumAndFindTrackIdBasedOnMetadataEndEnabled: boolean = null;
    isAddAlbumAndFindTrackIdBasedOnMetadataStartEnabled: boolean = null;
    isAddAlbumAndFindTrackIdEndEnabled: boolean = null;
    isAddAlbumAndFindTrackIdStartEnabled: boolean = null;
    isAddAlbumWithTitleArtistEnabled: boolean = null;
    isAddAudioAlbumEndEnabled: boolean = null;
    isAddAudioAlbumStartEnabled: boolean = null;
    isAddFileEndEnabled: boolean = null;
    isAddFileStartEnabled: boolean = null;
    isAddFolderEndEnabled: boolean = null;
    isAddFolderStartEnabled: boolean = null;
    isAddMediaEndEnabled: boolean = null;
    isAddMediaStartEnabled: boolean = null;
    isAddPersonEndEnabled: boolean = null;
    isAddPersonLinkEndEnabled: boolean = null;
    isAddPersonLinkStartEnabled: boolean = null;
    isAddPersonLinksEndEnabled: boolean = null;
    isAddPersonLinksStartEnabled: boolean = null;
    isAddPersonStartEnabled: boolean = null;
    isAddTrackEndEnabled: boolean = null;
    isAddTrackFileEndEnabled: boolean = null;
    isAddTrackFileStartEnabled: boolean = null;
    isAddTrackStartEnabled: boolean = null;
    isAddingAlbumEnabled: boolean = null;
    isAddingFileEnabled: boolean = null;
    isAddingFolderEnabled: boolean = null;
    isAddingPersonEnabled: boolean = null;
    isAddingPersonLinkEnabled: boolean = null;
    isAddingTrackEnabled: boolean = null;
    isAddingTrackEntryEnabled: boolean = null;
    isAddingUnknownArtistEnabled: boolean = null;
    isAlbumAsVariousArtistsEnabled: boolean = null;
    isFindAndGetAudioTrackEndEnabled: boolean = null;
    isFindAndGetAudioTrackStartEnabled: boolean = null;
    isFindArtistAndAlbumEndEnabled: boolean = null;
    isFindArtistAndAlbumStartEnabled: boolean = null;
    isFindTrackIdAndAlbumBasedOnTrackSmidEndEnabled: boolean = null;
    isFindTrackIdAndAlbumBasedOnTrackSmidStartEnabled: boolean = null;
    isFoundExistingTrackEnabled: boolean = null;
    isFoundTrackAndAlbumEnabled: boolean = null;
    isFoundTrackBySmidEnabled: boolean = null;
    isPromotingTrackArtistEnabled: boolean = null;
    isRecomputeAlbumReleaseYearEndEnabled: boolean = null;
    isRecomputeAlbumReleaseYearStartEnabled: boolean = null;
    isReflectTrackFilesStateEndEnabled: boolean = null;
    isReflectTrackFilesStateStartEnabled: boolean = null;
    isSetTrackRatingFromFileEnabled: boolean = null;
    isSetUnknownGenreEnabled: boolean = null;
    isSplitExistingFileEnabled: boolean = null;
    isTrackIsAudioBookEnabled: boolean = null;
    isUpdateAlbumSetGenreEnabled: boolean = null;
    isUpdateAlbumVisibilityEnabled: boolean = null;
    isUpdateCurrentAudioAlbumEndEnabled: boolean = null;
    isUpdateCurrentAudioAlbumStartEnabled: boolean = null;
    isUpdateCurrentTrackEndEnabled: boolean = null;
    isUpdateCurrentTrackStartEnabled: boolean = null;
    isUpdateFileEndEnabled: boolean = null;
    isUpdateFileStartEnabled: boolean = null;
    isUpdateOldAlbumVisibilityEnabled: boolean = null;
    isUpdatePlaylistContentsEndEnabled: boolean = null;
    isUpdatePlaylistContentsStartEnabled: boolean = null;
    isUpdatingAlbumAcquisitionDateEnabled: boolean = null;
    isUpdatingAlbumEnabled: boolean = null;
    isUpdatingFileCountsEnabled: boolean = null;
    isUpdatingFileEnabled: boolean = null;
    isUpdatingPersonEnabled: boolean = null;
    isUpdatingPlaylistItemWithMediaIdEnabled: boolean = null;
    isUpdatingTrackAcquisitionDateEnabled: boolean = null;
    isUpdatingTrackEnabled: boolean = null;
    traceAddMediaStart(): void {
        console.warn('Providers#traceAddMediaStart not implemented')
    }
    traceAddMediaEnd(): void {
        console.warn('Providers#traceAddMediaEnd not implemented')
    }
    traceAddTrackStart(): void {
        console.warn('Providers#traceAddTrackStart not implemented')
    }
    traceAddTrackEnd(): void {
        console.warn('Providers#traceAddTrackEnd not implemented')
    }
    traceAddAlbumAndFindTrackIdStart(): void {
        console.warn('Providers#traceAddAlbumAndFindTrackIdStart not implemented')
    }
    traceAddAlbumAndFindTrackIdEnd(): void {
        console.warn('Providers#traceAddAlbumAndFindTrackIdEnd not implemented')
    }
    traceFindTrackIdAndAlbumBasedOnTrackSmidStart(): void {
        console.warn('Providers#traceFindTrackIdAndAlbumBasedOnTrackSmidStart not implemented')
    }
    traceFindTrackIdAndAlbumBasedOnTrackSmidEnd(): void {
        console.warn('Providers#traceFindTrackIdAndAlbumBasedOnTrackSmidEnd not implemented')
    }
    traceAddAlbumAndFindTrackIdBasedOnMetadataStart(): void {
        console.warn('Providers#traceAddAlbumAndFindTrackIdBasedOnMetadataStart not implemented')
    }
    traceAddAlbumAndFindTrackIdBasedOnMetadataEnd(): void {
        console.warn('Providers#traceAddAlbumAndFindTrackIdBasedOnMetadataEnd not implemented')
    }
    traceAddAudioAlbumStart(): void {
        console.warn('Providers#traceAddAudioAlbumStart not implemented')
    }
    traceAddAudioAlbumEnd(): void {
        console.warn('Providers#traceAddAudioAlbumEnd not implemented')
    }
    traceFindArtistAndAlbumStart(): void {
        console.warn('Providers#traceFindArtistAndAlbumStart not implemented')
    }
    traceFindArtistAndAlbumEnd(): void {
        console.warn('Providers#traceFindArtistAndAlbumEnd not implemented')
    }
    traceUpdateCurrentAudioAlbumStart(): void {
        console.warn('Providers#traceUpdateCurrentAudioAlbumStart not implemented')
    }
    traceUpdateCurrentAudioAlbumEnd(): void {
        console.warn('Providers#traceUpdateCurrentAudioAlbumEnd not implemented')
    }
    traceAddPersonLinksStart(): void {
        console.warn('Providers#traceAddPersonLinksStart not implemented')
    }
    traceAddPersonLinksEnd(): void {
        console.warn('Providers#traceAddPersonLinksEnd not implemented')
    }
    traceAddPersonStart(): void {
        console.warn('Providers#traceAddPersonStart not implemented')
    }
    traceAddPersonEnd(): void {
        console.warn('Providers#traceAddPersonEnd not implemented')
    }
    traceAddPersonLinkStart(): void {
        console.warn('Providers#traceAddPersonLinkStart not implemented')
    }
    traceAddPersonLinkEnd(): void {
        console.warn('Providers#traceAddPersonLinkEnd not implemented')
    }
    traceFindAndGetAudioTrackStart(): void {
        console.warn('Providers#traceFindAndGetAudioTrackStart not implemented')
    }
    traceFindAndGetAudioTrackEnd(): void {
        console.warn('Providers#traceFindAndGetAudioTrackEnd not implemented')
    }
    traceUpdateCurrentTrackStart(): void {
        console.warn('Providers#traceUpdateCurrentTrackStart not implemented')
    }
    traceUpdateCurrentTrackEnd(): void {
        console.warn('Providers#traceUpdateCurrentTrackEnd not implemented')
    }
    traceRecomputeAlbumReleaseYearStart(): void {
        console.warn('Providers#traceRecomputeAlbumReleaseYearStart not implemented')
    }
    traceRecomputeAlbumReleaseYearEnd(): void {
        console.warn('Providers#traceRecomputeAlbumReleaseYearEnd not implemented')
    }
    traceAddTrackFileStart(): void {
        console.warn('Providers#traceAddTrackFileStart not implemented')
    }
    traceAddTrackFileEnd(): void {
        console.warn('Providers#traceAddTrackFileEnd not implemented')
    }
    traceReflectTrackFilesStateStart(): void {
        console.warn('Providers#traceReflectTrackFilesStateStart not implemented')
    }
    traceReflectTrackFilesStateEnd(): void {
        console.warn('Providers#traceReflectTrackFilesStateEnd not implemented')
    }
    traceAddFileStart(): void {
        console.warn('Providers#traceAddFileStart not implemented')
    }
    traceAddFileEnd(): void {
        console.warn('Providers#traceAddFileEnd not implemented')
    }
    traceUpdateFileStart(): void {
        console.warn('Providers#traceUpdateFileStart not implemented')
    }
    traceUpdateFileEnd(): void {
        console.warn('Providers#traceUpdateFileEnd not implemented')
    }
    traceAddFolderStart(): void {
        console.warn('Providers#traceAddFolderStart not implemented')
    }
    traceAddFolderEnd(): void {
        console.warn('Providers#traceAddFolderEnd not implemented')
    }
    traceUpdatePlaylistContentsStart(): void {
        console.warn('Providers#traceUpdatePlaylistContentsStart not implemented')
    }
    traceUpdatePlaylistContentsEnd(): void {
        console.warn('Providers#traceUpdatePlaylistContentsEnd not implemented')
    }
    traceFoundTrackBySmid(): void {
        console.warn('Providers#traceFoundTrackBySmid not implemented')
    }
    traceFoundTrackAndAlbum(albumId: number, artistId: number, trackId: number): void {
        console.warn('Providers#traceFoundTrackAndAlbum not implemented')
    }
    tracePromotingTrackArtist(albumTitle: string): void {
        console.warn('Providers#tracePromotingTrackArtist not implemented')
    }
    traceAlbumAsVariousArtists(): void {
        console.warn('Providers#traceAlbumAsVariousArtists not implemented')
    }
    traceAddingAlbum(albumName: string): void {
        console.warn('Providers#traceAddingAlbum not implemented')
    }
    traceAddAlbumWithTitleArtist(albumTitle: string, artistId: number): void {
        console.warn('Providers#traceAddAlbumWithTitleArtist not implemented')
    }
    traceUpdatingAlbum(): void {
        console.warn('Providers#traceUpdatingAlbum not implemented')
    }
    traceAddingPerson(personName: string): void {
        console.warn('Providers#traceAddingPerson not implemented')
    }
    traceUpdatingPerson(personName: string): void {
        console.warn('Providers#traceUpdatingPerson not implemented')
    }
    traceAddingPersonLink(personId: number, mediaId: number): void {
        console.warn('Providers#traceAddingPersonLink not implemented')
    }
    traceAddingTrackEntry(albumId: number, trackTitle: string, trackNumber: number): void {
        console.warn('Providers#traceAddingTrackEntry not implemented')
    }
    traceTrackIsAudioBook(): void {
        console.warn('Providers#traceTrackIsAudioBook not implemented')
    }
    traceFoundExistingTrack(trackId: number): void {
        console.warn('Providers#traceFoundExistingTrack not implemented')
    }
    traceAddingUnknownArtist(): void {
        console.warn('Providers#traceAddingUnknownArtist not implemented')
    }
    traceUpdateAlbumSetGenre(genreId: number): void {
        console.warn('Providers#traceUpdateAlbumSetGenre not implemented')
    }
    traceSetUnknownGenre(): void {
        console.warn('Providers#traceSetUnknownGenre not implemented')
    }
    traceAddingTrack(trackName: string): void {
        console.warn('Providers#traceAddingTrack not implemented')
    }
    traceUpdatingTrack(trackName: string): void {
        console.warn('Providers#traceUpdatingTrack not implemented')
    }
    traceSetTrackRatingFromFile(trackTitle: string, rating: number): void {
        console.warn('Providers#traceSetTrackRatingFromFile not implemented')
    }
    traceSplitExistingFile(oldTrackId: number, newTrackId: number): void {
        console.warn('Providers#traceSplitExistingFile not implemented')
    }
    traceAddingFolder(folderPath: string): void {
        console.warn('Providers#traceAddingFolder not implemented')
    }
    traceAddingFile(filename: string): void {
        console.warn('Providers#traceAddingFile not implemented')
    }
    traceUpdatingFile(filename: string): void {
        console.warn('Providers#traceUpdatingFile not implemented')
    }
    traceUpdatingFileCounts(): void {
        console.warn('Providers#traceUpdatingFileCounts not implemented')
    }
    traceUpdateOldAlbumVisibility(albumId: number): void {
        console.warn('Providers#traceUpdateOldAlbumVisibility not implemented')
    }
    traceUpdateAlbumVisibility(albumId: number): void {
        console.warn('Providers#traceUpdateAlbumVisibility not implemented')
    }
    traceUpdatingTrackAcquisitionDate(trackId: number): void {
        console.warn('Providers#traceUpdatingTrackAcquisitionDate not implemented')
    }
    traceUpdatingAlbumAcquisitionDate(albumId: number): void {
        console.warn('Providers#traceUpdatingAlbumAcquisitionDate not implemented')
    }
    traceUpdatingPlaylistItemWithMediaId(playlistContentId: number, mediaId: number): void {
        console.warn('Providers#traceUpdatingPlaylistItemWithMediaId not implemented')
    }
}
