// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { ICommon } from "./ICommon";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Instrumentation.Providers.Common')
export class Common implements ICommon { 
    isAppVisibilityChangedEnabled: boolean = null;
    isBusinessIntelligenceScalarDataPointEnabled: boolean = null;
    isBusinessIntelligenceStreamBooleanParameterEnabled: boolean = null;
    isBusinessIntelligenceStreamDataPointEnabled: boolean = null;
    isBusinessIntelligenceStreamIntParameterEnabled: boolean = null;
    isBusinessIntelligenceStreamStringParameterEnabled: boolean = null;
    isClientLaunchEnabled: boolean = null;
    isClientShutdownEnabled: boolean = null;
    isClosedCaptionDownloadCompletedEnabled: boolean = null;
    isClosedCaptionDownloadFailedEnabled: boolean = null;
    isClosedCaptionDownloadStartedEnabled: boolean = null;
    isEventSystemErrorEnabled: boolean = null;
    isFileTransferBackgroundTransferAttachFailedEnabled: boolean = null;
    isFileTransferBackgroundTransferCanceledEnabled: boolean = null;
    isFileTransferBackgroundTransferCompletedEnabled: boolean = null;
    isFileTransferBackgroundTransferErrorEnabled: boolean = null;
    isFileTransferBackgroundTransferStartFailedEnabled: boolean = null;
    isFileTransferClosedEnabled: boolean = null;
    isFileTransferCompletedEnabled: boolean = null;
    isFileTransferDownloadInfoFailedEnabled: boolean = null;
    isFileTransferFailedEnabled: boolean = null;
    isFileTransferManagerInitializationStartEnabled: boolean = null;
    isFileTransferManagerInitializationStopEnabled: boolean = null;
    isFileTransferMoveToLibraryFailedEnabled: boolean = null;
    isFileTransferQueuedEnabled: boolean = null;
    isFileTransferStart_FailedEnabled: boolean = null;
    isFileTransferStart_SuccessedEnabled: boolean = null;
    isLogFileUploadedToWatsonEnabled: boolean = null;
    isProcessInitializeEventStartEnabled: boolean = null;
    isProcessInitializeEventStopEnabled: boolean = null;
    isProcessResumeEventSingletonStartEnabled: boolean = null;
    isProcessResumeEventSingletonStopEnabled: boolean = null;
    isProcessResumeEventStartEnabled: boolean = null;
    isProcessResumeEventStopEnabled: boolean = null;
    isProcessResumeTelemetryStartEnabled: boolean = null;
    isProcessResumeTelemetryStopEnabled: boolean = null;
    isProcessSuspendEventSingletonStartEnabled: boolean = null;
    isProcessSuspendEventSingletonStopEnabled: boolean = null;
    isProcessSuspendEventStartEnabled: boolean = null;
    isProcessSuspendEventStopEnabled: boolean = null;
    isProcessSuspendTelemetryStartEnabled: boolean = null;
    isProcessSuspendTelemetryStopEnabled: boolean = null;
    isSingletonInitializationCompletedEnabled: boolean = null;
    isSingletonInitializationStartedEnabled: boolean = null;
    isZuneHostLaunchEnabled: boolean = null;
    isZuneHostShutdownEnabled: boolean = null;
    is_ShipAssertEnabled: boolean = null;
    trace_ShipAssert(id: number, param: number, message: string, hresult: number, functionName: string, file: string, line: number): void {
        console.warn('Common#trace_ShipAssert not implemented')
    }
    traceBusinessIntelligenceScalarDataPoint(id: number, userId: string, timestamp: number, classId: number, typeId: number, allowedByPrivacySettings: boolean, parameterName: string, parameterValue: number): void {
        console.warn('Common#traceBusinessIntelligenceScalarDataPoint not implemented')
    }
    traceBusinessIntelligenceStreamDataPoint(id: number, userId: string, timestamp: number, classId: number, typeId: number, allowedByPrivacySettings: boolean, parameterCount: number): void {
        console.warn('Common#traceBusinessIntelligenceStreamDataPoint not implemented')
    }
    traceBusinessIntelligenceStreamIntParameter(id: number, parameterName: string, parameterValue: number): void {
        console.warn('Common#traceBusinessIntelligenceStreamIntParameter not implemented')
    }
    traceBusinessIntelligenceStreamBooleanParameter(id: number, parameterName: string, parameterValue: boolean): void {
        console.warn('Common#traceBusinessIntelligenceStreamBooleanParameter not implemented')
    }
    traceBusinessIntelligenceStreamStringParameter(id: number, parameterName: string, parameterValue: string): void {
        console.warn('Common#traceBusinessIntelligenceStreamStringParameter not implemented')
    }
    traceClientLaunch(): void {
        console.warn('Common#traceClientLaunch not implemented')
    }
    traceClientShutdown(code: number): void {
        console.warn('Common#traceClientShutdown not implemented')
    }
    traceEventSystemError(errorCode: number, provider: string, eventChannel: number, eventId: number, eventKeywords: number, eventLevel: number, eventOpcode: number, eventTask: number, eventVersion: number): void {
        console.warn('Common#traceEventSystemError not implemented')
    }
    traceZuneHostLaunch(isElevated: boolean, parameter: string): void {
        console.warn('Common#traceZuneHostLaunch not implemented')
    }
    traceZuneHostShutdown(code: number): void {
        console.warn('Common#traceZuneHostShutdown not implemented')
    }
    traceLogFileUploadedToWatson(filePath: string): void {
        console.warn('Common#traceLogFileUploadedToWatson not implemented')
    }
    traceProcessInitializeEventStart(): void {
        console.warn('Common#traceProcessInitializeEventStart not implemented')
    }
    traceProcessInitializeEventStop(durationMsec: number): void {
        console.warn('Common#traceProcessInitializeEventStop not implemented')
    }
    traceProcessSuspendEventStart(): void {
        console.warn('Common#traceProcessSuspendEventStart not implemented')
    }
    traceProcessSuspendEventStop(durationMsec: number): void {
        console.warn('Common#traceProcessSuspendEventStop not implemented')
    }
    traceProcessResumeEventStart(): void {
        console.warn('Common#traceProcessResumeEventStart not implemented')
    }
    traceProcessResumeEventStop(durationMsec: number): void {
        console.warn('Common#traceProcessResumeEventStop not implemented')
    }
    traceProcessSuspendEventSingletonStart(singletonEnumValue: number): void {
        console.warn('Common#traceProcessSuspendEventSingletonStart not implemented')
    }
    traceProcessSuspendEventSingletonStop(singletonEnumValue: number): void {
        console.warn('Common#traceProcessSuspendEventSingletonStop not implemented')
    }
    traceProcessResumeEventSingletonStart(singletonEnumValue: number): void {
        console.warn('Common#traceProcessResumeEventSingletonStart not implemented')
    }
    traceProcessResumeEventSingletonStop(singletonEnumValue: number): void {
        console.warn('Common#traceProcessResumeEventSingletonStop not implemented')
    }
    traceProcessSuspendTelemetryStart(): void {
        console.warn('Common#traceProcessSuspendTelemetryStart not implemented')
    }
    traceProcessSuspendTelemetryStop(): void {
        console.warn('Common#traceProcessSuspendTelemetryStop not implemented')
    }
    traceProcessResumeTelemetryStart(): void {
        console.warn('Common#traceProcessResumeTelemetryStart not implemented')
    }
    traceProcessResumeTelemetryStop(): void {
        console.warn('Common#traceProcessResumeTelemetryStop not implemented')
    }
    traceSingletonInitializationStarted(singletonEnumValue: number): void {
        console.warn('Common#traceSingletonInitializationStarted not implemented')
    }
    traceSingletonInitializationCompleted(singletonEnumValue: number): void {
        console.warn('Common#traceSingletonInitializationCompleted not implemented')
    }
    traceFileTransferManagerInitializationStart(): void {
        console.warn('Common#traceFileTransferManagerInitializationStart not implemented')
    }
    traceFileTransferManagerInitializationStop(): void {
        console.warn('Common#traceFileTransferManagerInitializationStop not implemented')
    }
    traceFileTransferBackgroundTransferStartFailed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferBackgroundTransferStartFailed not implemented')
    }
    traceFileTransferBackgroundTransferAttachFailed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferBackgroundTransferAttachFailed not implemented')
    }
    traceFileTransferBackgroundTransferCompleted(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferBackgroundTransferCompleted not implemented')
    }
    traceFileTransferBackgroundTransferError(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferBackgroundTransferError not implemented')
    }
    traceFileTransferBackgroundTransferCanceled(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferBackgroundTransferCanceled not implemented')
    }
    traceFileTransferMoveToLibraryFailed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferMoveToLibraryFailed not implemented')
    }
    traceFileTransferDownloadInfoFailed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferDownloadInfoFailed not implemented')
    }
    traceFileTransferQueued(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferQueued not implemented')
    }
    traceFileTransferFailed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferFailed not implemented')
    }
    traceFileTransferStart_Successed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferStart_Successed not implemented')
    }
    traceFileTransferStart_Failed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferStart_Failed not implemented')
    }
    traceFileTransferCompleted(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferCompleted not implemented')
    }
    traceFileTransferClosed(hresult: number, taskId: number, backgroundTransferId: string, bytes: number, totalBytes: number, fileId: number, libraryId: number, libraryTypeId: number, mediaId: string, isolatedStoragePath: string, targetPath: string, status: number): void {
        console.warn('Common#traceFileTransferClosed not implemented')
    }
    traceClosedCaptionDownloadStarted(hresult: number, path: string, url: string, isXHR: boolean): void {
        console.warn('Common#traceClosedCaptionDownloadStarted not implemented')
    }
    traceClosedCaptionDownloadFailed(hresult: number, path: string, url: string, isXHR: boolean): void {
        console.warn('Common#traceClosedCaptionDownloadFailed not implemented')
    }
    traceClosedCaptionDownloadCompleted(hresult: number, path: string, url: string, isXHR: boolean): void {
        console.warn('Common#traceClosedCaptionDownloadCompleted not implemented')
    }
    traceAppVisibilityChanged(appVisible: boolean): void {
        console.warn('Common#traceAppVisibilityChanged not implemented')
    }
}
