// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { GetBookmarkReturnValue } from "./GetBookmarkReturnValue";
import { GetFileCountsReturnValue } from "./GetFileCountsReturnValue";
import { GetLastWatchedEpisodeForSeriesReturnValue } from "./GetLastWatchedEpisodeForSeriesReturnValue";
import { GetLibraryIdFromMediaIdReturnValue } from "./GetLibraryIdFromMediaIdReturnValue";
import { GetPlaycountReturnValue } from "./GetPlaycountReturnValue";
import { GetPlayedStatusReturnValue } from "./GetPlayedStatusReturnValue";
import { IPlayableMediaData } from "./IPlayableMediaData";
import { PreferredFileUrlReturnValue } from "./PreferredFileUrlReturnValue";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";

export interface IVideoProvider {
    getBookmarkAsync(libraryId: number): IAsyncOperation<GetBookmarkReturnValue>;
    setBookmarkAsync(libraryId: number, value: number): IAsyncAction;
    getPlaycountAsync(libraryId: number): IAsyncOperation<GetPlaycountReturnValue>;
    setPlaycountAsync(libraryId: number, value: number): IAsyncAction;
    getPlayedStatusAsync(libraryId: number): IAsyncOperation<GetPlayedStatusReturnValue>;
    setPlayedStatusAsync(libraryId: number, value: number): IAsyncAction;
    getPreferredFileUrlAsync(libraryId: number): IAsyncOperation<PreferredFileUrlReturnValue>;
    getPlayabilityByLibraryIdAsync(nLibraryId: number): IAsyncOperation<IPlayableMediaData>;
    getFileCountsByLibraryIdAsync(libraryId: number): IAsyncOperation<GetFileCountsReturnValue>;
    getFileCountsByMediaIdAsync(mediaId: string): IAsyncOperation<GetFileCountsReturnValue>;
    getLibraryIdFromMediaIdAsync(mediaId: string): IAsyncOperation<GetLibraryIdFromMediaIdReturnValue>;
    getLastWatchedEpisodeForSeriesAsync(tvSeriesMediaId: string): IAsyncOperation<GetLastWatchedEpisodeForSeriesReturnValue>;
}
