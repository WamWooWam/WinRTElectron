// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:03 2021
// </auto-generated>
// --------------------------------------------------

import { ISmoothStreamingPlaybackReporter } from "./ISmoothStreamingPlaybackReporter";
import { HResult } from "winrt/Windows/Foundation/HResult";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Platform.Playback.SmoothStreamingPlaybackReporter')
export class SmoothStreamingPlaybackReporter implements ISmoothStreamingPlaybackReporter { 
    chunkHistorySize: number = null;
    setMainAttribute(name: string, value: any): void {
        console.warn('SmoothStreamingPlaybackReporter#setMainAttribute not implemented')
    }
    setSubAttribute(name: string, value: any): void {
        console.warn('SmoothStreamingPlaybackReporter#setSubAttribute not implemented')
    }
    appendSubAttribute(name: string, value: any): void {
        console.warn('SmoothStreamingPlaybackReporter#appendSubAttribute not implemented')
    }
    subreportEnd(): void {
        console.warn('SmoothStreamingPlaybackReporter#subreportEnd not implemented')
    }
    sendLogAsync(action: string, fatal: boolean): void {
        console.warn('SmoothStreamingPlaybackReporter#sendLogAsync not implemented')
    }
    forceFpsUpdate(): void {
        console.warn('SmoothStreamingPlaybackReporter#forceFpsUpdate not implemented')
    }
    reportRates(frameRate: number, actualFramesPerSecond: number, droppedFramesPerSecond: number): void {
        console.warn('SmoothStreamingPlaybackReporter#reportRates not implemented')
    }
    shutdown(): void {
        console.warn('SmoothStreamingPlaybackReporter#shutdown not implemented')
    }
    addDownloadData(startedTicks: number, openedTicks: number, completedTicks: number, sizeInBytes: number, hnsStarttime: number, qualityLevel: number): void {
        console.warn('SmoothStreamingPlaybackReporter#addDownloadData not implemented')
    }
    addChunkInfo(bitrateIndex: number, bitrate: number, width: number, height: number): void {
        console.warn('SmoothStreamingPlaybackReporter#addChunkInfo not implemented')
    }
    addChunkHistory(chunkID: number, bitrate: number, bitrateIndex: number, hnsBuffer: number, avgBandwidth: number, lastBandwidth: number): void {
        console.warn('SmoothStreamingPlaybackReporter#addChunkHistory not implemented')
    }
    addChunkIP(chunkTimestampHns: number, chunkIP: number): void {
        console.warn('SmoothStreamingPlaybackReporter#addChunkIP not implemented')
    }
    removeAllChunkIPs(): void {
        console.warn('SmoothStreamingPlaybackReporter#removeAllChunkIPs not implemented')
    }
    reportBuffering(): void {
        console.warn('SmoothStreamingPlaybackReporter#reportBuffering not implemented')
    }
    reportExcessiveBuffering(startingPositionMs: number, nAttempts: number, fExiting: boolean): void {
        console.warn('SmoothStreamingPlaybackReporter#reportExcessiveBuffering not implemented')
    }
    reportBadUrl(hr: number, description: string): void {
        console.warn('SmoothStreamingPlaybackReporter#reportBadUrl not implemented')
    }
    reportBadManifest(hr: number, description: string): void {
        console.warn('SmoothStreamingPlaybackReporter#reportBadManifest not implemented')
    }
}
