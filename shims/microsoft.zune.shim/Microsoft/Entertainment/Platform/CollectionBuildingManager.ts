// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { CollectionBuildEndEventHandlerArgs } from "./CollectionBuildEndEventHandlerArgs";
import { CollectionBuildMDLCProgressEventHandlerArgs } from "./CollectionBuildMDLCProgressEventHandlerArgs";
import { CollectionBuildProgressEventHandlerArgs } from "./CollectionBuildProgressEventHandlerArgs";
import { ICollectionBuildingManager } from "./ICollectionBuildingManager";
import { EventHandler } from "winrt/Windows/Foundation/EventHandler`1";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { TypedEventHandler } from "winrt/Windows/Foundation/TypedEventHandler`2";
import { InvokeEvent } from "winrt/Windows/Foundation/Interop/InvokeEvent";



@GenerateShim('Microsoft.Entertainment.Platform.CollectionBuildingManager')
export class CollectionBuildingManager implements ICollectionBuildingManager {
    static instance: CollectionBuildingManager;
    constructor() {
        CollectionBuildingManager.instance = this;
    }
   
    private __collectionBuildBeginEvent: Set<EventHandler<number>> = new Set();
    @Enumerable(true)
    set oncollectionbuildbeginevent(handler: EventHandler<number>) {
        this.__collectionBuildBeginEvent.add(handler);
    }

    private __collectionBuildCloudCollectionV2FirstTrackAddedEvent: Set<EventHandler<number>> = new Set();
    @Enumerable(true)
    set oncollectionbuildcloudcollectionv2firsttrackaddedevent(handler: EventHandler<number>) {
        this.__collectionBuildCloudCollectionV2FirstTrackAddedEvent.add(handler);
    }

    private __collectionBuildDeduplicationStrategyRequiredEvent: Set<EventHandler<number>> = new Set();
    @Enumerable(true)
    set oncollectionbuilddeduplicationstrategyrequiredevent(handler: EventHandler<number>) {
        this.__collectionBuildDeduplicationStrategyRequiredEvent.add(handler);
    }

    private __collectionBuildEndEvent: Set<TypedEventHandler<ICollectionBuildingManager, CollectionBuildEndEventHandlerArgs>> = new Set();
    @Enumerable(true)
    set oncollectionbuildendevent(handler: TypedEventHandler<ICollectionBuildingManager, CollectionBuildEndEventHandlerArgs>) {
        this.__collectionBuildEndEvent.add(handler);
    }

    private __collectionBuildMDLCProgressEvent: Set<TypedEventHandler<ICollectionBuildingManager, CollectionBuildMDLCProgressEventHandlerArgs>> = new Set();
    @Enumerable(true)
    set oncollectionbuildmdlcprogressevent(handler: TypedEventHandler<ICollectionBuildingManager, CollectionBuildMDLCProgressEventHandlerArgs>) {
        this.__collectionBuildMDLCProgressEvent.add(handler);
    }

    private __collectionBuildMediaSyncedEvent: Set<EventHandler<number>> = new Set();
    @Enumerable(true)
    set oncollectionbuildmediasyncedevent(handler: EventHandler<number>) {
        this.__collectionBuildMediaSyncedEvent.add(handler);
    }

    private __collectionBuildPrefetchCompleteEvent: Set<EventHandler<number>> = new Set();
    @Enumerable(true)
    set oncollectionbuildprefetchcompleteevent(handler: EventHandler<number>) {
        this.__collectionBuildPrefetchCompleteEvent.add(handler);
    }

    private __collectionBuildProgressEvent: Set<TypedEventHandler<ICollectionBuildingManager, CollectionBuildProgressEventHandlerArgs>> = new Set();
    @Enumerable(true)
    set oncollectionbuildprogressevent(handler: TypedEventHandler<ICollectionBuildingManager, CollectionBuildProgressEventHandlerArgs>) {
        this.__collectionBuildProgressEvent.add(handler);
    }

    private __collectionBuildUpsyncProgressEvent: Set<TypedEventHandler<ICollectionBuildingManager, CollectionBuildProgressEventHandlerArgs>> = new Set();
    @Enumerable(true)
    set oncollectionbuildupsyncprogressevent(handler: TypedEventHandler<ICollectionBuildingManager, CollectionBuildProgressEventHandlerArgs>) {
        this.__collectionBuildUpsyncProgressEvent.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'collectionbuildbeginevent':
                this.__collectionBuildBeginEvent.add(handler);
                break;
            case 'collectionbuildcloudcollectionv2firsttrackaddedevent':
                this.__collectionBuildCloudCollectionV2FirstTrackAddedEvent.add(handler);
                break;
            case 'collectionbuilddeduplicationstrategyrequiredevent':
                this.__collectionBuildDeduplicationStrategyRequiredEvent.add(handler);
                break;
            case 'collectionbuildendevent':
                this.__collectionBuildEndEvent.add(handler);
                break;
            case 'collectionbuildmdlcprogressevent':
                this.__collectionBuildMDLCProgressEvent.add(handler);
                break;
            case 'collectionbuildmediasyncedevent':
                this.__collectionBuildMediaSyncedEvent.add(handler);
                break;
            case 'collectionbuildprefetchcompleteevent':
                this.__collectionBuildPrefetchCompleteEvent.add(handler);
                break;
            case 'collectionbuildprogressevent':
                this.__collectionBuildProgressEvent.add(handler);
                break;
            case 'collectionbuildupsyncprogressevent':
                this.__collectionBuildUpsyncProgressEvent.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'collectionbuildbeginevent':
                this.__collectionBuildBeginEvent.delete(handler);
                break;
            case 'collectionbuildcloudcollectionv2firsttrackaddedevent':
                this.__collectionBuildCloudCollectionV2FirstTrackAddedEvent.delete(handler);
                break;
            case 'collectionbuilddeduplicationstrategyrequiredevent':
                this.__collectionBuildDeduplicationStrategyRequiredEvent.delete(handler);
                break;
            case 'collectionbuildendevent':
                this.__collectionBuildEndEvent.delete(handler);
                break;
            case 'collectionbuildmdlcprogressevent':
                this.__collectionBuildMDLCProgressEvent.delete(handler);
                break;
            case 'collectionbuildmediasyncedevent':
                this.__collectionBuildMediaSyncedEvent.delete(handler);
                break;
            case 'collectionbuildprefetchcompleteevent':
                this.__collectionBuildPrefetchCompleteEvent.delete(handler);
                break;
            case 'collectionbuildprogressevent':
                this.__collectionBuildProgressEvent.delete(handler);
                break;
            case 'collectionbuildupsyncprogressevent':
                this.__collectionBuildUpsyncProgressEvent.delete(handler);
                break;
        }
    }

    dispatchEvent(name: string, args: any) {
        switch (name) {
            case 'collectionbuildbeginevent':
                InvokeEvent(this.__collectionBuildBeginEvent, 'collectionbuildbeginevent', args);
                break;
            case 'collectionbuildcloudcollectionv2firsttrackaddedevent':
                InvokeEvent(this.__collectionBuildCloudCollectionV2FirstTrackAddedEvent, 'collectionbuildcloudcollectionv2firsttrackaddedevent', args);
                break;
            case 'collectionbuilddeduplicationstrategyrequiredevent':
                InvokeEvent(this.__collectionBuildDeduplicationStrategyRequiredEvent, 'collectionbuilddeduplicationstrategyrequiredevent', args);
                break;
            case 'collectionbuildendevent':
                InvokeEvent(this.__collectionBuildEndEvent, 'collectionbuildendevent', args);
                break;
            case 'collectionbuildmdlcprogressevent':
                InvokeEvent(this.__collectionBuildMDLCProgressEvent, 'collectionbuildmdlcprogressevent', args);
                break;
            case 'collectionbuildmediasyncedevent':
                InvokeEvent(this.__collectionBuildMediaSyncedEvent, 'collectionbuildmediasyncedevent', args);
                break;
            case 'collectionbuildprefetchcompleteevent':
                InvokeEvent(this.__collectionBuildPrefetchCompleteEvent, 'collectionbuildprefetchcompleteevent', args);
                break;
            case 'collectionbuildprogressevent':
                InvokeEvent(this.__collectionBuildProgressEvent, 'collectionbuildprogressevent', args);
                break;
            case 'collectionbuildupsyncprogressevent':
                InvokeEvent(this.__collectionBuildUpsyncProgressEvent, 'collectionbuildupsyncprogressevent', args);
                break;
        }
    }
}
