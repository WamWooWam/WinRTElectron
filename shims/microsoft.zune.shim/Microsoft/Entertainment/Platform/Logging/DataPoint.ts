// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:03 2021
// </auto-generated>
// --------------------------------------------------

import { ComputedProperties } from "./ComputedProperties";
import { IDataPoint } from "./IDataPoint";
import { ILogElement } from "./ILogElement";
import { LoggingLevel } from "./LoggingLevel";
import { TelemetryAuthMethod } from "./TelemetryAuthMethod";
import { TelemetryListener } from "./TelemetryListener";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { uuidv4 } from "winrt/Windows/Foundation/Interop/Utils";

export class DataPoint implements IDataPoint, ILogElement {
    level: LoggingLevel = null;
    authMethod: TelemetryAuthMethod = null;
    static properties: Partial<ComputedProperties> = { sessionGuid: uuidv4() };

    target: string;
    eventName: string;
    parameters: Map<string, string>;

    // constructor();
    // constructor(level: LoggingLevel);
    // constructor(level: LoggingLevel, authMethod: TelemetryAuthMethod);
    constructor(...args) { this.parameters = new Map(); }
    write(): void {
        console.info("telemetry-event: %O -> %O, %O", this.eventName, this.target, [...this.parameters]);
    }
    appendTarget(value: string): void {
        this.target = value;
    }
    appendGroupBegin(value: string): void {
        console.warn('DataPoint#appendGroupBegin not implemented')
    }
    appendGroupEnd(): void {
        console.warn('DataPoint#appendGroupEnd not implemented')
    }
    appendArea(value: string): void {
        console.warn('DataPoint#appendArea not implemented')
    }
    appendUIPath(value: string): void {
        console.warn('DataPoint#appendUIPath not implemented')
    }
    appendComponent(value: string): void {
        console.warn('DataPoint#appendComponent not implemented')
    }
    appendEventName(value: string): void {
        this.eventName = value;
    }
    appendParameter(name: string, value: string): void {
        this.parameters.set(name, value);
    }
    appendDestination(listener: TelemetryListener): void {
        console.warn('DataPoint#appendDestination not implemented')
    }
}
