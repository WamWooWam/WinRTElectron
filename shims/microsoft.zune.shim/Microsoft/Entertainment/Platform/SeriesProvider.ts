// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { GetLibraryIdFromMediaIdReturnValue } from "./GetLibraryIdFromMediaIdReturnValue";
import { HasMediaReturnValue } from "./HasMediaReturnValue";
import { IPlayableMediaData } from "./IPlayableMediaData";
import { ISeriesProvider } from "./ISeriesProvider";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Platform.SeriesProvider')
export class SeriesProvider implements ISeriesProvider { 
    getLibraryIdFromMediaIdAsync(mediaId: string): IAsyncOperation<GetLibraryIdFromMediaIdReturnValue> {
        throw new Error('SeriesProvider#getLibraryIdFromMediaIdAsync not implemented')
    }
    getSeasonLibraryIdFromMediaIdAsync(mediaId: string, nSeasonNumber: number): IAsyncOperation<GetLibraryIdFromMediaIdReturnValue> {
        throw new Error('SeriesProvider#getSeasonLibraryIdFromMediaIdAsync not implemented')
    }
    getPlayabilityByLibraryIdAsync(nLibraryId: number): IAsyncOperation<IVectorView<IPlayableMediaData>> {
        throw new Error('SeriesProvider#getPlayabilityByLibraryIdAsync not implemented')
    }
    getPlayabilityBySeasonLibraryIdAsync(nLibraryId: number): IAsyncOperation<IVectorView<IPlayableMediaData>> {
        throw new Error('SeriesProvider#getPlayabilityBySeasonLibraryIdAsync not implemented')
    }
    hasLocalMediaAsync(libraryId: number): IAsyncOperation<HasMediaReturnValue> {
        throw new Error('SeriesProvider#hasLocalMediaAsync not implemented')
    }
    hasLocalMediaInSeasonAsync(seriesLibraryId: number, seasonId: number): IAsyncOperation<HasMediaReturnValue> {
        throw new Error('SeriesProvider#hasLocalMediaInSeasonAsync not implemented')
    }
    hasRemoteMediaAsync(libraryId: number): IAsyncOperation<HasMediaReturnValue> {
        throw new Error('SeriesProvider#hasRemoteMediaAsync not implemented')
    }
}
