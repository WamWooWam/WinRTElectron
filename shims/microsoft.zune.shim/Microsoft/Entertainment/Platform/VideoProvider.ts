// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { GetBookmarkReturnValue } from "./GetBookmarkReturnValue";
import { GetFileCountsReturnValue } from "./GetFileCountsReturnValue";
import { GetLastWatchedEpisodeForSeriesReturnValue } from "./GetLastWatchedEpisodeForSeriesReturnValue";
import { GetLibraryIdFromMediaIdReturnValue } from "./GetLibraryIdFromMediaIdReturnValue";
import { GetPlaycountReturnValue } from "./GetPlaycountReturnValue";
import { GetPlayedStatusReturnValue } from "./GetPlayedStatusReturnValue";
import { IPlayableMediaData } from "./IPlayableMediaData";
import { IVideoProvider } from "./IVideoProvider";
import { PreferredFileUrlReturnValue } from "./PreferredFileUrlReturnValue";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Platform.VideoProvider')
export class VideoProvider implements IVideoProvider { 
    getBookmarkAsync(libraryId: number): IAsyncOperation<GetBookmarkReturnValue> {
        throw new Error('VideoProvider#getBookmarkAsync not implemented')
    }
    setBookmarkAsync(libraryId: number, value: number): IAsyncAction {
        throw new Error('VideoProvider#setBookmarkAsync not implemented')
    }
    getPlaycountAsync(libraryId: number): IAsyncOperation<GetPlaycountReturnValue> {
        throw new Error('VideoProvider#getPlaycountAsync not implemented')
    }
    setPlaycountAsync(libraryId: number, value: number): IAsyncAction {
        throw new Error('VideoProvider#setPlaycountAsync not implemented')
    }
    getPlayedStatusAsync(libraryId: number): IAsyncOperation<GetPlayedStatusReturnValue> {
        throw new Error('VideoProvider#getPlayedStatusAsync not implemented')
    }
    setPlayedStatusAsync(libraryId: number, value: number): IAsyncAction {
        throw new Error('VideoProvider#setPlayedStatusAsync not implemented')
    }
    getPreferredFileUrlAsync(libraryId: number): IAsyncOperation<PreferredFileUrlReturnValue> {
        throw new Error('VideoProvider#getPreferredFileUrlAsync not implemented')
    }
    getPlayabilityByLibraryIdAsync(nLibraryId: number): IAsyncOperation<IPlayableMediaData> {
        throw new Error('VideoProvider#getPlayabilityByLibraryIdAsync not implemented')
    }
    getFileCountsByLibraryIdAsync(libraryId: number): IAsyncOperation<GetFileCountsReturnValue> {
        throw new Error('VideoProvider#getFileCountsByLibraryIdAsync not implemented')
    }
    getFileCountsByMediaIdAsync(mediaId: string): IAsyncOperation<GetFileCountsReturnValue> {
        throw new Error('VideoProvider#getFileCountsByMediaIdAsync not implemented')
    }
    getLibraryIdFromMediaIdAsync(mediaId: string): IAsyncOperation<GetLibraryIdFromMediaIdReturnValue> {
        throw new Error('VideoProvider#getLibraryIdFromMediaIdAsync not implemented')
    }
    getLastWatchedEpisodeForSeriesAsync(tvSeriesMediaId: string): IAsyncOperation<GetLastWatchedEpisodeForSeriesReturnValue> {
        throw new Error('VideoProvider#getLastWatchedEpisodeForSeriesAsync not implemented')
    }
}
