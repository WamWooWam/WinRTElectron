// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { IHttpQuery } from "../../../IHttpQuery";
import { IHttpQueryResponse } from "../../../IHttpQueryResponse";
import { IAssetLocationRequest } from "./IAssetLocationRequest";
import { IntendedUse } from "./IntendedUse";
import { Resolution } from "./Resolution";
import { SubtitleType } from "./SubtitleType";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Common.Service.Requests.Mds.Video.AssetLocationRequest')
export class AssetLocationRequest implements IAssetLocationRequest, IHttpQuery { 
    serviceMediaId: string = null;
    preferredResolution: Resolution = null;
    licenseKeyId: string = null;
    intendedUse: IntendedUse = null;
    fetchSubtitles: boolean = null;
    addSubtitleLocaleFilter(hstrLocale: string): void {
        console.warn('AssetLocationRequest#addSubtitleLocaleFilter not implemented')
    }
    addSubtitleTypeFilter(eSubtitleType: SubtitleType): void {
        console.warn('AssetLocationRequest#addSubtitleTypeFilter not implemented')
    }
    resetSubtitleFilters(): void {
        console.warn('AssetLocationRequest#resetSubtitleFilters not implemented')
    }
    sendAsync(): IAsyncOperation<IHttpQueryResponse> {
        throw new Error('AssetLocationRequest#sendAsync not implemented')
    }
}
