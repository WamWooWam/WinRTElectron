// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Media.AdaptiveStreaming 255.255.255.255 at Mon Mar 29 16:23:05 2021
// </auto-generated>
// --------------------------------------------------

import { ChunkInfo } from "./ChunkInfo";
import { IChunkIter } from "./IChunkIter";
import { IManifestTrack } from "./IManifestTrack";
import { MediaStreamType } from "./MediaStreamType";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { IBuffer } from "winrt/Windows/Storage/Streams/IBuffer";

export interface IManifestStream {
    availableTracks: IVectorView<IManifestTrack>;
    childStreams: IVectorView<IManifestStream>;
    displayHeight: number;
    displayWidth: number;
    firstInCurrentChunkList: IChunkIter;
    language: string;
    lastInCurrentChunkList: IChunkIter;
    maxHeight: number;
    maxWidth: number;
    name: string;
    parentStream: IManifestStream;
    selectedTracks: IVectorView<IManifestTrack>;
    subType: string;
    timeScale: number;
    type: MediaStreamType;
    url: string;
    getAttribute(name: string): string;
    restrictTracks(pTracks: IVectorView<IManifestTrack>): void;
    selectTracks(pTracks: IVectorView<IManifestTrack>): void;
    getIterator(minTime: number, time: number): IChunkIter;
    getChunkInfoAsync(pChunkIter: IChunkIter): IAsyncOperation<ChunkInfo>;
    getChunkDataAsync(pChunkIter: IChunkIter, pTrack: IManifestTrack): IAsyncOperation<IBuffer>;
}
