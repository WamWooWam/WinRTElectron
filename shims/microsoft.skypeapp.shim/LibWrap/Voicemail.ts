// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from LibWrap 255.255.255.255 at Fri Mar 26 17:24:56 2021
// </auto-generated>
// --------------------------------------------------

import { OnPropertyChangeType } from "./OnPropertyChangeType";
import { VectUnsignedInt } from "./VectUnsignedInt";
import { IClosable } from "winrt/Windows/Foundation/IClosable";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('LibWrap.Voicemail')
export class Voicemail implements IClosable { 
    static failurereason_SENDER_BLOCKED: number = 12;
    static failurereason_SENDER_NOT_AUTHORIZED: number = 11;
    static failurereason_RECEIVER_DISABLED_VOICEMAIL: number = 10;
    static failurereason_NO_PERMISSION: number = 9;
    static failurereason_PLAYBACK_ERROR: number = 8;
    static failurereason_RECORDING_ERROR: number = 7;
    static failurereason_FILE_WRITE_ERROR: number = 6;
    static failurereason_FILE_READ_ERROR: number = 5;
    static failurereason_NO_SUCH_VOICEMAIL: number = 4;
    static failurereason_NO_VOICEMAIL_CAPABILITY: number = 3;
    static failurereason_CONNECT_ERROR: number = 2;
    static failurereason_MISC_ERROR: number = 1;
    static status_CANCELLED: number = 16;
    static status_CHECKING: number = 15;
    static status_DELETING_FAILED: number = 14;
    static status_FAILED: number = 13;
    static status_DELETING: number = 12;
    static status_UPLOADED: number = 11;
    static status_UPLOADING: number = 10;
    static status_RECORDED: number = 9;
    static status_RECORDING: number = 8;
    static status_BLANK: number = 7;
    static status_PLAYED: number = 6;
    static status_PLAYING: number = 5;
    static status_BUFFERING: number = 4;
    static status_UNPLAYED: number = 3;
    static status_DOWNLOADING: number = 2;
    static status_NOTDOWNLOADED: number = 1;
    static type_OUTGOING: number = 3;
    static type_CUSTOM_GREETING: number = 2;
    static type_DEFAULT_GREETING: number = 4;
    static type_INCOMING: number = 1;
    
    getObjectID(): number {
        throw new Error('Voicemail#getObjectID not implemented')
    }
    getDbID(): number {
        throw new Error('Voicemail#getDbID not implemented')
    }
    getStrProperty(propKey: number): string {
        throw new Error('Voicemail#getStrProperty not implemented')
    }
    getStrPropertyWithXmlStripped(propKey: number): string {
        throw new Error('Voicemail#getStrPropertyWithXmlStripped not implemented')
    }
    getIntProperty(propKey: number): number {
        throw new Error('Voicemail#getIntProperty not implemented')
    }
    setExtendedStrProperty(propKey: number, value: string): void {
        console.warn('Voicemail#setExtendedStrProperty not implemented')
    }
    setExtendedIntProperty(propKey: number, value: number): void {
        console.warn('Voicemail#setExtendedIntProperty not implemented')
    }
    static typetoString(val: number): string {
        throw new Error('Voicemail#typetoString not implemented')
    }
    static statustoString(val: number): string {
        throw new Error('Voicemail#statustoString not implemented')
    }
    static failurereasontoString(val: number): string {
        throw new Error('Voicemail#failurereasontoString not implemented')
    }
    startRecording(): boolean {
        throw new Error('Voicemail#startRecording not implemented')
    }
    stopRecording(): boolean {
        throw new Error('Voicemail#stopRecording not implemented')
    }
    startPlayback(): boolean {
        throw new Error('Voicemail#startPlayback not implemented')
    }
    stopPlayback(): boolean {
        throw new Error('Voicemail#stopPlayback not implemented')
    }
    delete(): boolean {
        throw new Error('Voicemail#delete not implemented')
    }
    cancel(): boolean {
        throw new Error('Voicemail#cancel not implemented')
    }
    forwardToContacts(contacts: VectUnsignedInt): boolean {
        throw new Error('Voicemail#forwardToContacts not implemented')
    }
    forwardToGroups(groups: VectUnsignedInt): boolean {
        throw new Error('Voicemail#forwardToGroups not implemented')
    }
    getEventId(): number {
        throw new Error('Voicemail#getEventId not implemented')
    }
    checkPermission(): boolean {
        throw new Error('Voicemail#checkPermission not implemented')
    }
    discard(): void {
        console.warn('Voicemail#discard not implemented')
    }
    close(): void {
        console.warn('Voicemail#close not implemented')
    }

    private __propertyChange: Set<OnPropertyChangeType> = new Set();
    @Enumerable(true)
    set onpropertychange(handler: OnPropertyChangeType) {
        this.__propertyChange.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'propertychange':
                this.__propertyChange.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'propertychange':
                this.__propertyChange.delete(handler);
                break;
        }
    }
}
