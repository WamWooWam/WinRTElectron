// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from LibWrap 255.255.255.255 at Fri Mar 26 17:24:55 2021
// </auto-generated>
// --------------------------------------------------

import { OnPropertyChangeType } from "./OnPropertyChangeType";
import { IClosable } from "winrt/Windows/Foundation/IClosable";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('LibWrap.PriceQuote')
export class PriceQuote implements IClosable { 
    static failurereason_CALL_NOT_IN_PROGRESS: number = null;
    static failurereason_ACCOUNT_ON_HOLD: number = null;
    static failurereason_TIMEOUT: number = null;
    static failurereason_OUT_OF_FUNDS: number = null;
    static failurereason_SECURITY_CHECK_FAILED: number = null;
    static failurereason_PAYMENTS_STOPPED: number = null;
    static failurereason_NOT_SUPPORTED_BY_BUYER: number = null;
    static failurereason_PRICE_EXCEEDS_LIMIT: number = null;
    static failurereason_SIGNUP_REQUIRED: number = null;
    static failurereason_GW_AUTHENTICATION_FAILED: number = null;
    static failurereason_INTERNAL_ERROR: number = null;
    static failurereason_NETWORK_PROBLEM: number = null;
    static failurereason_REJECTED_BY_BUYER: number = null;
    static failurereason_NO_FAILURE: number = null;
    static status_FINISHED: number = null;
    static status_INPROGRESS: number = null;
    static status_ACCEPTED: number = null;
    static status_PENDING: number = null;
    static type_CALL_EVENT: number = null;
    static type_CALL_MINUTE: number = null;
    getObjectID(): number {
        throw new Error('PriceQuote#getObjectID not implemented')
    }
    getDbID(): number {
        throw new Error('PriceQuote#getDbID not implemented')
    }
    getStrProperty(propKey: number): string {
        throw new Error('PriceQuote#getStrProperty not implemented')
    }
    getStrPropertyWithXmlStripped(propKey: number): string {
        throw new Error('PriceQuote#getStrPropertyWithXmlStripped not implemented')
    }
    getIntProperty(propKey: number): number {
        throw new Error('PriceQuote#getIntProperty not implemented')
    }
    setExtendedStrProperty(propKey: number, value: string): void {
        console.warn('PriceQuote#setExtendedStrProperty not implemented')
    }
    setExtendedIntProperty(propKey: number, value: number): void {
        console.warn('PriceQuote#setExtendedIntProperty not implemented')
    }
    static typetoString(val: number): string {
        throw new Error('PriceQuote#typetoString not implemented')
    }
    static statustoString(val: number): string {
        throw new Error('PriceQuote#statustoString not implemented')
    }
    static failurereasontoString(val: number): string {
        throw new Error('PriceQuote#failurereasontoString not implemented')
    }
    getReferredObjectID(): number {
        throw new Error('PriceQuote#getReferredObjectID not implemented')
    }
    accept(): boolean {
        throw new Error('PriceQuote#accept not implemented')
    }
    reject(): boolean {
        throw new Error('PriceQuote#reject not implemented')
    }
    discard(): void {
        console.warn('PriceQuote#discard not implemented')
    }
    close(): void {
        console.warn('PriceQuote#close not implemented')
    }

    private __propertyChange: Set<OnPropertyChangeType> = new Set();
    @Enumerable(true)
    set onpropertychange(handler: OnPropertyChangeType) {
        this.__propertyChange.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'propertychange':
                this.__propertyChange.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'propertychange':
                this.__propertyChange.delete(handler);
                break;
        }
    }
}
