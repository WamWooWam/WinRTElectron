// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:01 2021
// </auto-generated>
// --------------------------------------------------

import { UnicodeGeneralCategory } from "./UnicodeGeneralCategory";
import { UnicodeNumericType } from "./UnicodeNumericType";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";

@GenerateShim('Windows.Data.Text.UnicodeCharacters')
export class UnicodeCharacters { 
    static getCodepointFromSurrogatePair(highSurrogate: number, lowSurrogate: number): number {
        throw new Error('UnicodeCharacters#getCodepointFromSurrogatePair not implemented')
    }
    static getSurrogatePairFromCodepoint(codepoint: number): { highSurrogate: string, lowSurrogate: string } {
        throw new Error('UnicodeCharacters#getSurrogatePairFromCodepoint not implemented')
    }
    static isHighSurrogate(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isHighSurrogate not implemented')
    }
    static isLowSurrogate(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isLowSurrogate not implemented')
    }
    static isSupplementary(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isSupplementary not implemented')
    }
    static isNoncharacter(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isNoncharacter not implemented')
    }
    static isWhitespace(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isWhitespace not implemented')
    }
    static isAlphabetic(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isAlphabetic not implemented')
    }
    static isCased(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isCased not implemented')
    }
    static isUppercase(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isUppercase not implemented')
    }
    static isLowercase(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isLowercase not implemented')
    }
    static isIdStart(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isIdStart not implemented')
    }
    static isIdContinue(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isIdContinue not implemented')
    }
    static isGraphemeBase(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isGraphemeBase not implemented')
    }
    static isGraphemeExtend(codepoint: number): boolean {
        throw new Error('UnicodeCharacters#isGraphemeExtend not implemented')
    }
    static getNumericType(codepoint: number): UnicodeNumericType {
        throw new Error('UnicodeCharacters#getNumericType not implemented')
    }
    static getGeneralCategory(codepoint: number): UnicodeGeneralCategory {
        throw new Error('UnicodeCharacters#getGeneralCategory not implemented')
    }
}
