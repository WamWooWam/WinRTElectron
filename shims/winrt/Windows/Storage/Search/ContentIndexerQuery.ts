// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:08 2021
// </auto-generated>
// --------------------------------------------------

import { IMapView } from "../../Foundation/Collections/IMapView`2";
import { IVectorView } from "../../Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { IIndexableContent } from "./IIndexableContent";
import { StorageFolder } from "../StorageFolder";

@GenerateShim('Windows.Storage.Search.ContentIndexerQuery')
export class ContentIndexerQuery { 
    queryFolder: StorageFolder = null;
    getCountAsync(): IAsyncOperation<number> {
        throw new Error('ContentIndexerQuery#getCountAsync not implemented')
    }
    getPropertiesAsync(): IAsyncOperation<IVectorView<IMapView<string, any>>> {
        throw new Error('ContentIndexerQuery#getPropertiesAsync not implemented')
    }
    getPropertiesRangeAsync(startIndex: number, maxItems: number): IAsyncOperation<IVectorView<IMapView<string, any>>> {
        throw new Error('ContentIndexerQuery#getPropertiesRangeAsync not implemented')
    }
    getAsync(): IAsyncOperation<IVectorView<IIndexableContent>> {
        throw new Error('ContentIndexerQuery#getAsync not implemented')
    }
    getRangeAsync(startIndex: number, maxItems: number): IAsyncOperation<IVectorView<IIndexableContent>> {
        throw new Error('ContentIndexerQuery#getRangeAsync not implemented')
    }
}
