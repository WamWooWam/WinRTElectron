// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:07 2021
// </auto-generated>
// --------------------------------------------------

import { IAsyncOperationWithProgress } from "../../Foundation/IAsyncOperationWithProgress`2";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { IClosable } from "../../Foundation/IClosable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { ThumbnailType } from "./ThumbnailType";
import { IBuffer } from "../Streams/IBuffer";
import { IContentTypeProvider } from "../Streams/IContentTypeProvider";
import { IInputStream } from "../Streams/IInputStream";
import { IOutputStream } from "../Streams/IOutputStream";
import { IRandomAccessStream } from "../Streams/IRandomAccessStream";
import { IRandomAccessStreamWithContentType } from "../Streams/IRandomAccessStreamWithContentType";
import { InputStreamOptions } from "../Streams/InputStreamOptions";

@GenerateShim('Windows.Storage.FileProperties.StorageItemThumbnail')
export class StorageItemThumbnail implements IRandomAccessStreamWithContentType, IContentTypeProvider, IRandomAccessStream, IOutputStream, IClosable, IInputStream { 
    originalHeight: number = null;
    originalWidth: number = null;
    returnedSmallerCachedSize: boolean = null;
    type: ThumbnailType = null;
    size: number = null;
    canRead: boolean = null;
    canWrite: boolean = null;
    position: number = null;
    contentType: string = null;
    getInputStreamAt(position: number): IInputStream {
        throw new Error('StorageItemThumbnail#getInputStreamAt not implemented')
    }
    getOutputStreamAt(position: number): IOutputStream {
        throw new Error('StorageItemThumbnail#getOutputStreamAt not implemented')
    }
    seek(position: number): void {
        console.warn('StorageItemThumbnail#seek not implemented')
    }
    cloneStream(): IRandomAccessStream {
        throw new Error('StorageItemThumbnail#cloneStream not implemented')
    }
    close(): void {
        console.warn('StorageItemThumbnail#close not implemented')
    }
    readAsync(buffer: IBuffer, count: number, options: InputStreamOptions): IAsyncOperationWithProgress<IBuffer, number> {
        throw new Error('StorageItemThumbnail#readAsync not implemented')
    }
    writeAsync(buffer: IBuffer): IAsyncOperationWithProgress<number, number> {
        throw new Error('StorageItemThumbnail#writeAsync not implemented')
    }
    flushAsync(): IAsyncOperation<boolean> {
        throw new Error('StorageItemThumbnail#flushAsync not implemented')
    }
}
