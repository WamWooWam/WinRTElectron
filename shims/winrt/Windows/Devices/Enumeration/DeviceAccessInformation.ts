// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { DeviceAccessChangedEventArgs } from "./DeviceAccessChangedEventArgs";
import { DeviceAccessStatus } from "./DeviceAccessStatus";
import { DeviceClass } from "./DeviceClass";
import { Enumerable } from "../../Foundation/Interop/Enumerable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { TypedEventHandler } from "../../Foundation/TypedEventHandler`2";

@GenerateShim('Windows.Devices.Enumeration.DeviceAccessInformation')
export class DeviceAccessInformation { 
    currentStatus: DeviceAccessStatus = null;
    static createFromId(deviceId: string): DeviceAccessInformation {
        throw new Error('DeviceAccessInformation#createFromId not implemented')
    }
    static createFromDeviceClassId(deviceClassId: string): DeviceAccessInformation {
        throw new Error('DeviceAccessInformation#createFromDeviceClassId not implemented')
    }
    static createFromDeviceClass(deviceClass: DeviceClass): DeviceAccessInformation {
        throw new Error('DeviceAccessInformation#createFromDeviceClass not implemented')
    }

    #accessChanged: Set<TypedEventHandler<DeviceAccessInformation, DeviceAccessChangedEventArgs>> = new Set();
    @Enumerable(true)
    set onaccesschanged(handler: TypedEventHandler<DeviceAccessInformation, DeviceAccessChangedEventArgs>) {
        this.#accessChanged.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'accesschanged':
                this.#accessChanged.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'accesschanged':
                this.#accessChanged.delete(handler);
                break;
        }
    }
}
