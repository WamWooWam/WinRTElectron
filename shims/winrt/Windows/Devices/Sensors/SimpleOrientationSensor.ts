// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { SimpleOrientation } from "./SimpleOrientation";
import { SimpleOrientationSensorOrientationChangedEventArgs } from "./SimpleOrientationSensorOrientationChangedEventArgs";
import { Enumerable } from "../../Foundation/Interop/Enumerable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { TypedEventHandler } from "../../Foundation/TypedEventHandler`2";

@GenerateShim('Windows.Devices.Sensors.SimpleOrientationSensor')
export class SimpleOrientationSensor { 
    getCurrentOrientation(): SimpleOrientation {
        throw new Error('SimpleOrientationSensor#getCurrentOrientation not implemented')
    }
    static getDefault(): SimpleOrientationSensor {
        throw new Error('SimpleOrientationSensor#getDefault not implemented')
    }

    #orientationChanged: Set<TypedEventHandler<SimpleOrientationSensor, SimpleOrientationSensorOrientationChangedEventArgs>> = new Set();
    @Enumerable(true)
    set onorientationchanged(handler: TypedEventHandler<SimpleOrientationSensor, SimpleOrientationSensorOrientationChangedEventArgs>) {
        this.#orientationChanged.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'orientationchanged':
                this.#orientationChanged.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'orientationchanged':
                this.#orientationChanged.delete(handler);
                break;
        }
    }
}
