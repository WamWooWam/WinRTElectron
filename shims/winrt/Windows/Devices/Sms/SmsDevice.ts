// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:03 2021
// </auto-generated>
// --------------------------------------------------

import { CellularClass } from "./CellularClass";
import { ISmsDevice } from "./ISmsDevice";
import { ISmsMessage } from "./ISmsMessage";
import { SendSmsMessageOperation } from "./SendSmsMessageOperation";
import { SmsDeviceMessageStore } from "./SmsDeviceMessageStore";
import { SmsDeviceStatus } from "./SmsDeviceStatus";
import { SmsDeviceStatusChangedEventHandler } from "./SmsDeviceStatusChangedEventHandler";
import { SmsEncodedLength } from "./SmsEncodedLength";
import { SmsMessageReceivedEventHandler } from "./SmsMessageReceivedEventHandler";
import { SmsTextMessage } from "./SmsTextMessage";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { Enumerable } from "../../Foundation/Interop/Enumerable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";

@GenerateShim('Windows.Devices.Sms.SmsDevice')
export class SmsDevice implements ISmsDevice { 
    accountPhoneNumber: string = null;
    cellularClass: CellularClass = null;
    deviceStatus: SmsDeviceStatus = null;
    messageStore: SmsDeviceMessageStore = null;
    sendMessageAsync(message: ISmsMessage): SendSmsMessageOperation {
        throw new Error('SmsDevice#sendMessageAsync not implemented')
    }
    calculateLength(message: SmsTextMessage): SmsEncodedLength {
        throw new Error('SmsDevice#calculateLength not implemented')
    }
    static fromNetworkAccountIdAsync(networkAccountId: string): IAsyncOperation<SmsDevice> {
        throw new Error('SmsDevice#fromNetworkAccountIdAsync not implemented')
    }
    static getDeviceSelector(): string {
        throw new Error('SmsDevice#getDeviceSelector not implemented')
    }
    static fromIdAsync(deviceId: string): IAsyncOperation<SmsDevice> {
        throw new Error('SmsDevice#fromIdAsync not implemented')
    }
    static getDefaultAsync(): IAsyncOperation<SmsDevice> {
        throw new Error('SmsDevice#getDefaultAsync not implemented')
    }

    #smsDeviceStatusChanged: Set<SmsDeviceStatusChangedEventHandler> = new Set();
    @Enumerable(true)
    set onsmsdevicestatuschanged(handler: SmsDeviceStatusChangedEventHandler) {
        this.#smsDeviceStatusChanged.add(handler);
    }

    #smsMessageReceived: Set<SmsMessageReceivedEventHandler> = new Set();
    @Enumerable(true)
    set onsmsmessagereceived(handler: SmsMessageReceivedEventHandler) {
        this.#smsMessageReceived.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'smsdevicestatuschanged':
                this.#smsDeviceStatusChanged.add(handler);
                break;
            case 'smsmessagereceived':
                this.#smsMessageReceived.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'smsdevicestatuschanged':
                this.#smsDeviceStatusChanged.delete(handler);
                break;
            case 'smsmessagereceived':
                this.#smsMessageReceived.delete(handler);
                break;
        }
    }
}
