// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:03 2021
// </auto-generated>
// --------------------------------------------------

import { UsbConfiguration } from "./UsbConfiguration";
import { UsbDeviceClass } from "./UsbDeviceClass";
import { UsbDeviceDescriptor } from "./UsbDeviceDescriptor";
import { UsbInterface } from "./UsbInterface";
import { UsbSetupPacket } from "./UsbSetupPacket";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { IClosable } from "../../Foundation/IClosable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { IBuffer } from "../../Storage/Streams/IBuffer";

@GenerateShim('Windows.Devices.Usb.UsbDevice')
export class UsbDevice implements IClosable { 
    configuration: UsbConfiguration = null;
    defaultInterface: UsbInterface = null;
    deviceDescriptor: UsbDeviceDescriptor = null;
    sendControlOutTransferAsync(setupPacket: UsbSetupPacket, buffer: IBuffer): IAsyncOperation<number> {
        throw new Error('UsbDevice#sendControlOutTransferAsync not implemented')
    }
    sendControlOutTransferAsyncNoBuffer(setupPacket: UsbSetupPacket): IAsyncOperation<number> {
        throw new Error('UsbDevice#sendControlOutTransferAsyncNoBuffer not implemented')
    }
    sendControlInTransferAsync(setupPacket: UsbSetupPacket, buffer: IBuffer): IAsyncOperation<IBuffer> {
        throw new Error('UsbDevice#sendControlInTransferAsync not implemented')
    }
    sendControlInTransferAsyncNoBuffer(setupPacket: UsbSetupPacket): IAsyncOperation<IBuffer> {
        throw new Error('UsbDevice#sendControlInTransferAsyncNoBuffer not implemented')
    }
    close(): void {
        console.warn('UsbDevice#close not implemented')
    }
    static getDeviceSelector(vendorId: number, productId: number, winUsbInterfaceClass: string): string {
        throw new Error('UsbDevice#getDeviceSelector not implemented')
    }
    static getDeviceSelectorGuidOnly(winUsbInterfaceClass: string): string {
        throw new Error('UsbDevice#getDeviceSelectorGuidOnly not implemented')
    }
    static getDeviceSelectorVidPidOnly(vendorId: number, productId: number): string {
        throw new Error('UsbDevice#getDeviceSelectorVidPidOnly not implemented')
    }
    static getDeviceClassSelector(usbClass: UsbDeviceClass): string {
        throw new Error('UsbDevice#getDeviceClassSelector not implemented')
    }
    static fromIdAsync(deviceId: string): IAsyncOperation<UsbDevice> {
        throw new Error('UsbDevice#fromIdAsync not implemented')
    }
}
