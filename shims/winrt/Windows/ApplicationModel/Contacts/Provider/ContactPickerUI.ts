// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:00 2021
// </auto-generated>
// --------------------------------------------------

import { Contact } from "../Contact";
import { ContactFieldType } from "../ContactFieldType";
import { ContactSelectionMode } from "../ContactSelectionMode";
import { AddContactResult } from "./AddContactResult";
import { ContactRemovedEventArgs } from "./ContactRemovedEventArgs";
import { IVectorView } from "../../../Foundation/Collections/IVectorView`1";
import { IVector } from "../../../Foundation/Collections/IVector`1";
import { Enumerable } from "../../../Foundation/Interop/Enumerable";
import { GenerateShim } from "../../../Foundation/Interop/GenerateShim";
import { TypedEventHandler } from "../../../Foundation/TypedEventHandler`2";

@GenerateShim('Windows.ApplicationModel.Contacts.Provider.ContactPickerUI')
export class ContactPickerUI { 
    desiredFields: IVectorView<string> = null;
    selectionMode: ContactSelectionMode = null;
    desiredFieldsWithContactFieldType: IVector<ContactFieldType> = null;
    addContact(id: string, contact: Contact): AddContactResult {
        throw new Error('ContactPickerUI#addContact not implemented')
    }
    removeContact(id: string): void {
        console.warn('ContactPickerUI#removeContact not implemented')
    }
    containsContact(id: string): boolean {
        throw new Error('ContactPickerUI#containsContact not implemented')
    }

    #contactRemoved: Set<TypedEventHandler<ContactPickerUI, ContactRemovedEventArgs>> = new Set();
    @Enumerable(true)
    set oncontactremoved(handler: TypedEventHandler<ContactPickerUI, ContactRemovedEventArgs>) {
        this.#contactRemoved.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'contactremoved':
                this.#contactRemoved.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'contactremoved':
                this.#contactRemoved.delete(handler);
                break;
        }
    }
}
