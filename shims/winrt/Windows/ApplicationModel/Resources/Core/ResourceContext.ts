// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:00 2021
// </auto-generated>
// --------------------------------------------------

import { ResourceQualifier } from "./ResourceQualifier";
import { IIterable } from "../../../Foundation/Collections/IIterable`1";
import { IObservableMap } from "../../../Foundation/Collections/IObservableMap`2";
import { IVectorView } from "../../../Foundation/Collections/IVectorView`1";
import { GenerateShim } from "../../../Foundation/Interop/GenerateShim";
import { Vector } from "../../../Foundation/Interop/Vector`1";

export class ResourceContext { 
    languages: IVectorView<string> = new Vector(["en-GB"]);
    qualifierValues: IObservableMap<string, string> = null;
    reset(): void {
        console.warn('ResourceContext#reset not implemented')
    }
    resetQualifierValues(qualifierNames: IIterable<string>): void {
        console.warn('ResourceContext#resetQualifierValues not implemented')
    }
    overrideToMatch(result: IIterable<ResourceQualifier>): void {
        console.warn('ResourceContext#overrideToMatch not implemented')
    }
    clone(): ResourceContext {
        throw new Error('ResourceContext#clone not implemented')
    }
    static getForCurrentView(): ResourceContext {
        return null;
    }
    static setGlobalQualifierValue(key: string, value: string): void {
        console.warn('ResourceContext#setGlobalQualifierValue not implemented')
    }
    static resetGlobalQualifierValues(): void {
        console.warn('ResourceContext#resetGlobalQualifierValues not implemented')
    }
    static resetGlobalQualifierValuesForSpecifiedQualifiers(qualifierNames: IIterable<string>): void {
        console.warn('ResourceContext#resetGlobalQualifierValuesForSpecifiedQualifiers not implemented')
    }
    static getForViewIndependentUse(): ResourceContext {
        throw new Error('ResourceContext#getForViewIndependentUse not implemented')
    }
    static createMatchingContext(result: IIterable<ResourceQualifier>): ResourceContext {
        throw new Error('ResourceContext#createMatchingContext not implemented')
    }
}
