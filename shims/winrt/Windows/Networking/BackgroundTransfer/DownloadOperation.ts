// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:05 2021
// </auto-generated>
// --------------------------------------------------

import { IAsyncOperationWithProgress } from "../../Foundation/IAsyncOperationWithProgress`2";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { Uri } from "../../Foundation/Uri";
import { BackgroundDownloadProgress } from "./BackgroundDownloadProgress";
import { BackgroundTransferCostPolicy } from "./BackgroundTransferCostPolicy";
import { BackgroundTransferGroup } from "./BackgroundTransferGroup";
import { BackgroundTransferPriority } from "./BackgroundTransferPriority";
import { IBackgroundTransferOperation } from "./IBackgroundTransferOperation";
import { IBackgroundTransferOperationPriority } from "./IBackgroundTransferOperationPriority";
import { ResponseInformation } from "./ResponseInformation";
import { IStorageFile } from "../../Storage/IStorageFile";
import { IInputStream } from "../../Storage/Streams/IInputStream";

@GenerateShim('Windows.Networking.BackgroundTransfer.DownloadOperation')
export class DownloadOperation implements IBackgroundTransferOperation, IBackgroundTransferOperationPriority { 
    progress: BackgroundDownloadProgress = null;
    resultFile: IStorageFile = null;
    costPolicy: BackgroundTransferCostPolicy = null;
    group: string = null;
    guid: string = null;
    method: string = null;
    requestedUri: Uri = null;
    priority: BackgroundTransferPriority = null;
    transferGroup: BackgroundTransferGroup = null;
    startAsync(): IAsyncOperationWithProgress<DownloadOperation, DownloadOperation> {
        throw new Error('DownloadOperation#startAsync not implemented')
    }
    attachAsync(): IAsyncOperationWithProgress<DownloadOperation, DownloadOperation> {
        throw new Error('DownloadOperation#attachAsync not implemented')
    }
    pause(): void {
        console.warn('DownloadOperation#pause not implemented')
    }
    resume(): void {
        console.warn('DownloadOperation#resume not implemented')
    }
    getResultStreamAt(position: number): IInputStream {
        throw new Error('DownloadOperation#getResultStreamAt not implemented')
    }
    getResponseInformation(): ResponseInformation {
        throw new Error('DownloadOperation#getResponseInformation not implemented')
    }
}
