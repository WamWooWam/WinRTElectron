// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:06 2021
// </auto-generated>
// --------------------------------------------------

import { XmlDocument } from "../../Data/Xml/Dom/XmlDocument";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { Uri } from "../../Foundation/Uri";
import { NetworkAdapter } from "../Connectivity/NetworkAdapter";
import { HotspotCredentialsAuthenticationResult } from "./HotspotCredentialsAuthenticationResult";

@GenerateShim('Windows.Networking.NetworkOperators.HotspotAuthenticationContext')
export class HotspotAuthenticationContext { 
    authenticationUrl: Uri = null;
    networkAdapter: NetworkAdapter = null;
    redirectMessageUrl: Uri = null;
    redirectMessageXml: XmlDocument = null;
    wirelessNetworkId: number[] = null;
    issueCredentials(userName: string, password: string, extraParameters: string, markAsManualConnectOnFailure: boolean): void {
        console.warn('HotspotAuthenticationContext#issueCredentials not implemented')
    }
    abortAuthentication(markAsManual: boolean): void {
        console.warn('HotspotAuthenticationContext#abortAuthentication not implemented')
    }
    skipAuthentication(): void {
        console.warn('HotspotAuthenticationContext#skipAuthentication not implemented')
    }
    triggerAttentionRequired(packageRelativeApplicationId: string, applicationParameters: string): void {
        console.warn('HotspotAuthenticationContext#triggerAttentionRequired not implemented')
    }
    issueCredentialsAsync(userName: string, password: string, extraParameters: string, markAsManualConnectOnFailure: boolean): IAsyncOperation<HotspotCredentialsAuthenticationResult> {
        throw new Error('HotspotAuthenticationContext#issueCredentialsAsync not implemented')
    }
    static tryGetAuthenticationContext(evenToken: string): { isValid: boolean, context: HotspotAuthenticationContext } {
        throw new Error('HotspotAuthenticationContext#tryGetAuthenticationContext not implemented')
    }
}
