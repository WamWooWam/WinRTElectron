// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:39 2021
// </auto-generated>
// --------------------------------------------------

import { ICollection } from "../ICollection";
import { IFolder } from "../IFolder";
import { IMailManager } from "../IMailManager";
import { IMailView } from "../IMailView";
import { IObject } from "../IObject";
import { MailMessageLastVerb } from "../MailMessageLastVerb";
import { OutboxQueue } from "../OutboxQueue";
import { IFolderPrivate } from "./IFolderPrivate";
import { IMailConversationManagerPrivate } from "./IMailConversationManagerPrivate";
import { IMailDownloadWorkItem } from "./IMailDownloadWorkItem";
import { IMailMessagePrivate } from "./IMailMessagePrivate";
import { IMailMessagePrivateStash } from "./IMailMessagePrivateStash";
import { IMailVisibility } from "./IMailVisibility";
import { SearchMailServerType } from "./SearchMailServerType";
import { IRandomAccessStream } from "winrt/Windows/Storage/Streams/IRandomAccessStream";

export interface IMailManagerPrivate extends IMailManager {
    getAllMessages(): ICollection;
    getConversationManager(): IMailConversationManagerPrivate;
    getMessageCollection(hstrAccountId: string, hstrFolderId: string): ICollection;
    loadViewByObjectId(hstrViewId: string): IMailView;
    loadMessageByServerId(hstrFolderId: string, hstrServerMessageId: string): IMailMessagePrivate;
    loadMessage(hstrMessageId: string): IMailMessagePrivate;
    loadMessageByServerUid(hstrFolderId: string, serverUid: number): IMailMessagePrivate;
    loadMessageByUniqueId(hstrUniqueId: string): IMailMessagePrivate;
    // createMessage(hstrAccountId: string): IMailMessagePrivate;
    createServerSearchResult(uiSearchId: number, uiLocalMessageId: number, serverType: SearchMailServerType, hstrAccountId: string, hstrFolderId: string): IMailMessagePrivate;
    updateMessageFromMime(ppMessage: IMailMessagePrivate, pStream: IRandomAccessStream, fTruncated: boolean): void;
    // createMessageFromMime(pFolder: IFolderPrivate, pStream: IRandomAccessStream, fTruncated: boolean, fAllowCommit: boolean): IMailMessagePrivate;
    getOutboxCollection(hstrAccountId: string, eQueue: OutboxQueue): ICollection;
    deleteAllMessages(hstrAccountId: string, hstrFolderId: string): void;
    getNeedBackfillMessages(sidAccount: number, fInboxOnly: boolean): ICollection;
    getAllInboxMessages(fUnseenOnly: boolean): ICollection;
    getAllPinnedPersonMessages(fUnseenOnly: boolean): ICollection;
    getPinnedPersonMessagesForAccount(fUnseenOnly: boolean, hstrAccountId: string): ICollection;
    markAllUnseenInboxMessagesAsToasted(): void;
    markCollectionAsToasted(pCollection: ICollection): void;
    getMailVisibilityObject(): IMailVisibility;
    getUntoastedInboxMessagesForAccount(hstrAccountId: string): ICollection;
    getUntoastedFavoriteMessagesForAccount(hstrAccountId: string): ICollection;
    getPinnedViews(): ICollection;
    getChangedMessagesByAccount(hstrAccountId: string): ICollection;
    getChangedMessagesByFolder(hstrFolderId: string): ICollection;
    loadStashMessage(pMessage: IObject): IMailMessagePrivateStash;
    loadStashMessageByObjectId(hstrMessageId: string): IMailMessagePrivateStash;
    revertStashChanges(hstrMessageId: string): void;
    applyAllStashChanges(hstrMessageId: string): void;
    applySomeStashChanges(hstrMessageId: string, fFlagged: boolean, fRead: boolean, fHasNewsletterCategory: boolean, fHasSocialUpdateCategory: boolean, verb: MailMessageLastVerb): void;
    undoStashCopy(hstrMessageId: string): void;
    hasPendingChangesFromSourceFolder(hstrFolderId: string): boolean;
    rollbackPendingMovesToDestinationFolder(hstrAccountId: string, hstrFolderId: string): void;
    getMailWorkItemsCollection(uAccountRowId: number): ICollection;
    getObjectFromStoreId(uStoreId: number): IObject;
    getWorkItemFromRowId(uDownloadWorkItemRowId: number): IMailDownloadWorkItem;
    cleanupWorkItems(uAccountRowId: number): void;
    failInProgressBodyDownloads(uAccountRowId: number): void;
    getInProgressBodyDownloadsForFolder(hstrFolderId: string): ICollection;
    getFullBodyDownloadsNeededForFolder(uAccountRowId: number, pFolder: IFolder): ICollection;
    getAttachmentDownloadsNeededforFolder(uAccountRowId: number, pFolder: IFolder, fEmbeddedAttachments: boolean, fOrdinaryAttachments: boolean): ICollection;
    findMeetingRequests(hstrEventUID: string, hstrAccountId: string): ICollection;
    parseEmailString(hstrRFC2822EmailString: string): { name: string, email: string };
    pauseMailNotifications(): void;
    resumeMailNotifications(): void;
}
