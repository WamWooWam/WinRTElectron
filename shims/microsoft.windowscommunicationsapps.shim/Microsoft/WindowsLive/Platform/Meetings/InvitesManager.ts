// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:39 2021
// </auto-generated>
// --------------------------------------------------

import { IAttendee } from "../Calendar/IAttendee";
import { IEvent } from "../Calendar/IEvent";
import { ResponseType } from "../Calendar/ResponseType";
import { IAccount } from "../IAccount";
import { IMailMessage } from "../IMailMessage";
import { IInvitesManager } from "./IInvitesManager";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.WindowsLive.Platform.Meetings.InvitesManager')
export class InvitesManager implements IInvitesManager { 
    createResponseMail(pEvent: IEvent, pRequest: IMailMessage, response: ResponseType, pAccount: IAccount): IMailMessage {
        throw new Error('InvitesManager#createResponseMail not implemented')
    }
    sendMeetingResponse(pEvent: IEvent, pRequest: IMailMessage, response: ResponseType, pAccount: IAccount): void {
        console.warn('InvitesManager#sendMeetingResponse not implemented')
    }
    createSmartForwardMail(pEvent: IEvent, pAccount: IAccount): IMailMessage {
        throw new Error('InvitesManager#createSmartForwardMail not implemented')
    }
    mailFromEvent(pEvent: IEvent, pAccount: IAccount): IMailMessage {
        throw new Error('InvitesManager#mailFromEvent not implemented')
    }
    mailFromEventWithAttendees(pEvent: IEvent, pAccount: IAccount, pAttendees: IVectorView<IAttendee>): IMailMessage {
        throw new Error('InvitesManager#mailFromEventWithAttendees not implemented')
    }
    applyICS(pMessage: IMailMessage): boolean {
        throw new Error('InvitesManager#applyICS not implemented')
    }
}
