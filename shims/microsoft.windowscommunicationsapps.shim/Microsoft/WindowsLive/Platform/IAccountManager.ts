// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:38 2021
// </auto-generated>
// --------------------------------------------------

import { AccountSort } from "./AccountSort";
import { ApplicationScenario } from "./ApplicationScenario";
import { ConnectableFilter } from "./ConnectableFilter";
import { ConnectedFilter } from "./ConnectedFilter";
import { IAccount } from "./IAccount";
import { ICertificateCollection } from "./ICertificateCollection";
import { ICertificateObject } from "./ICertificateObject";
import { ICollection } from "./ICollection";

export interface IAccountManager {
    readonly defaultAccount: IAccount;
    canSetSyncTypePush(): boolean;
    getAccountByControlChannelId(controlChannelId: string): IAccount;
    getAccountBySourceId(sourceId: string, emailAddress: string): IAccount;
    getConnectableAccountByEmailDomain(sourceId: string, emailAddress: string): IAccount;
    getConnectableAccountsByScenario(scenario: ApplicationScenario, filter: ConnectableFilter): ICollection;
    getConnectedAccountsByScenario(scenario: ApplicationScenario, filter: ConnectedFilter, sort: AccountSort): ICollection;
    loadAccount(objectId: string): IAccount;
    queryForCertificateCollection(pAccount: IAccount): ICertificateCollection;
    queryForCertificate(pbThumbPrint: number[]): ICertificateObject;
}
