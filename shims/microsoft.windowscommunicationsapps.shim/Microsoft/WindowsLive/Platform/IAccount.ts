// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:37 2021
// </auto-generated>
// --------------------------------------------------

import { AccountAuthType } from "./AccountAuthType";
import { AccountIconType } from "./AccountIconType";
import { AccountType } from "./AccountType";
import { ApplicationScenario } from "./ApplicationScenario";
import { ConfigureType } from "./ConfigureType";
import { HintState } from "./HintState";
import { IAccountResource } from "./IAccountResource";
import { IAccountServerConnectionSettings } from "./IAccountServerConnectionSettings";
import { IAccountToken } from "./IAccountToken";
import { ICollection } from "./ICollection";
import { IContact } from "./IContact";
import { IObject } from "./IObject";
import { IncludeSentItemsInConversationCache } from "./IncludeSentItemsInConversationCache";
import { ResourceType } from "./ResourceType";
import { ServerType } from "./ServerType";
import { SyncType } from "./SyncType";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";

export interface IAccount extends IObject {
    readonly accountType: AccountType;
    readonly allEmailAddresses: IVectorView<string>;
    readonly authType: AccountAuthType;
    readonly color: number;
    readonly controlChannelId: string;
    readonly createDate: Date;
    displayName: string;
    readonly editableResources: ICollection;
    readonly emailAddress: string;
    filterContactsFromView: boolean;
    folderStateResult: number;
    readonly hintState: HintState;
    readonly iconMediumUrl: string;
    readonly iconSmallUrl: string;
    readonly iconType: AccountIconType;
    includeSentItemsInConversationCache: IncludeSentItemsInConversationCache;
    readonly isDefault: boolean;
    readonly isEasi: boolean;
    lastAuthResult: number;
    readonly meContact: IContact;
    readonly peopleViewComplete: boolean;
    pollInterval: number;
    preferredSendAsAddress: string;
    protectionEnterpriseId: string;
    readonly resources: ICollection;
    readonly sendAsAddresses: IVectorView<string>;
    readonly servers: ICollection;
    readonly serviceContactsName: string;
    readonly serviceName: string;
    settingsChangedTime: Date;
    settingsResult: number;
    settingsSyncTime: Date;
    readonly shortLinkLimit: number;
    readonly siteUrl: string;
    readonly sourceId: string;
    readonly statusLimit: number;
    readonly summary: string;
    readonly supportsOAuth: boolean;
    syncType: SyncType;
    readonly thirdPartyUserId: string;
    readonly tokens: ICollection;
    userDisplayName: string;
    getConfigureType(scenario: ApplicationScenario): ConfigureType;
    getOtherConnectableAccounts(scenario: ApplicationScenario): ICollection;
    getServerScenarios(scenario: ApplicationScenario, reconnect: boolean): string;
    getResourceByType(type: ResourceType): IAccountResource;
    getServerByType(type: ServerType): IAccountServerConnectionSettings;
    getTokenByScheme(scheme: string): IAccountToken;
    createConnectedAccount(email: string): IAccount;
    deleteFromLocalDevice(): void;
    setAuthTokens(encryptedRefreshToken: string, encryptedAccessToken: string, accessTokenExpiryTime: Date): void;
    getAccessTokenAsync(): IAsyncOperation<string>;
}
