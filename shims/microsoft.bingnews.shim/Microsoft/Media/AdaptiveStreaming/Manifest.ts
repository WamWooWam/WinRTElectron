// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:09 2021
// </auto-generated>
// --------------------------------------------------

import { IManifestStream } from "./IManifestStream";
import { IStreamChangedResult } from "./IStreamChangedResult";
import { ManifestType } from "./ManifestType";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { AsyncOperation } from "winrt/Windows/Foundation/Interop/AsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Media.AdaptiveStreaming.Manifest')
export class Manifest { 
    readonly availableStreams: IVectorView<IManifestStream> = null;
    readonly dvrwindowLength: number = null;
    readonly duration: number = null;
    readonly isLive: boolean = null;
    readonly lookAheadCount: number = null;
    readonly majorVersion: number = null;
    readonly minorVersion: number = null;
    readonly selectedStreams: IVectorView<IManifestStream> = null;
    readonly startTime: number = null;
    readonly timeScale: number = null;
    readonly type: ManifestType = null;
    getAttribute(name: string): string {
        throw new Error('Manifest#getAttribute not implemented')
    }
    selectStreamsAsync(pStreams: IVectorView<IManifestStream>): IAsyncOperation<IVectorView<IStreamChangedResult>> {
        return AsyncOperation.from(async () => { throw new Error('Manifest#selectStreamsAsync not implemented') });
    }
}
