// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:08 2021
// </auto-generated>
// --------------------------------------------------

import { WindowsCategoriesDataModel } from "./WindowsCategoriesDataModel";
import { WindowsCategoryDataModel } from "./WindowsCategoryDataModel";
import { WindowsSourceDataModel } from "./WindowsSourceDataModel";
import { WindowsTopicDataModel } from "./WindowsTopicDataModel";
import { IVector } from "winrt/Windows/Foundation/Collections/IVector`1";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { Vector } from "winrt/Windows/Foundation/Interop/Vector`1";

@GenerateShim('Microsoft.Amp.PersonalDataPlatform.DataClient.News.DataModel.Windows.WindowsNewsState')
export class WindowsNewsState implements IStringable { 
    version: number = null;
    updatedMillisecondsSinceJsRef: number = null;
    readonly lastUpdateTime: Date = null;
    upgradedFromPreviousState: boolean = null;
    liveTileMarket: string = "en-gb";
    featuredSourcesWereAdded: boolean = null;
    categories: IVector<WindowsCategoriesDataModel> = new Vector();
    topics: IVector<WindowsTopicDataModel> = new Vector();
    sources: IVector<WindowsSourceDataModel> = new Vector();
    wereSourcesEmptyBeforeEdit: boolean = null;
    addCategoryByMarket(market: string, index: number, category: WindowsCategoryDataModel): void {
        console.warn('WindowsNewsState#addCategoryByMarket not implemented')
    }
    addSource(index: number, source: WindowsSourceDataModel): void {
        console.warn('WindowsNewsState#addSource not implemented')
    }
    addTopic(index: number, topic: WindowsTopicDataModel): void {
        console.warn('WindowsNewsState#addTopic not implemented')
    }
    appendSources(sources: IVector<WindowsSourceDataModel>): void {
        console.warn('WindowsNewsState#appendSources not implemented')
    }
    getCategoriesForMarket(market: string): WindowsCategoriesDataModel {
        // throw new Error('WindowsNewsState#getCategoriesForMarket not implemented')
        var model = new WindowsCategoriesDataModel();
        model.market = market;
        return model;
    }
    removeCategoriesFromMarket(market: string, categories: IVector<WindowsCategoryDataModel>, userIntended: boolean): void {
        console.warn('WindowsNewsState#removeCategoriesFromMarket not implemented')
    }
    removeCategoryFromMarket(market: string, category: WindowsCategoryDataModel): void {
        console.warn('WindowsNewsState#removeCategoryFromMarket not implemented')
    }
    removeSourceAt(index: number): void {
        console.warn('WindowsNewsState#removeSourceAt not implemented')
    }
    removeSource(source: WindowsSourceDataModel): void {
        console.warn('WindowsNewsState#removeSource not implemented')
    }
    removeTopicAt(index: number): void {
        console.warn('WindowsNewsState#removeTopicAt not implemented')
    }
    removeTopic(topic: WindowsTopicDataModel): void {
        console.warn('WindowsNewsState#removeTopic not implemented')
    }
    updateCategoriesForMarket(market: string, categories: IVector<WindowsCategoryDataModel>, userIntended: boolean): void {
        console.warn('WindowsNewsState#updateCategoriesForMarket not implemented')
    }
    updateSources(sources: IVector<WindowsSourceDataModel>): void {
        console.warn('WindowsNewsState#updateSources not implemented')
    }
    toString(): string {
        throw new Error('WindowsNewsState#toString not implemented')
    }
}
