// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:11 2021
// </auto-generated>
// --------------------------------------------------

import { CacheServiceResponse } from "./CacheServiceResponse";
import { DateTime } from "winrt/Windows/Foundation/DateTime";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { AsyncAction } from "winrt/Windows/Foundation/Interop/AsyncAction";
import { AsyncOperation } from "winrt/Windows/Foundation/Interop/AsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Platform.DataServices.CacheService')
export class CacheService implements IStringable {
    readonly inMemorySize: number = null;
    readonly cachePolicySize: number = null;
    readonly defaultExpiry: number = null;
    constructor(cacheId: string) {
        console.warn('CacheService.ctor not implemented')
    }
    readEntryAsync(id: string, fileNameOnly: boolean): IAsyncOperation<CacheServiceResponse> {
        return AsyncOperation.from(async () => { 
            return null;
        });
    }
    removeEntryAsync(id: string): IAsyncOperation<boolean> {
        return AsyncOperation.from(async () => { throw new Error('CacheService#removeEntryAsync not implemented') });
    }
    waitForLastCleanupTask(): IAsyncAction {
        return AsyncAction.from(async () => console.warn('CacheService#waitForLastCleanupTask not implemented'));
    }
    writeEntryAsync1(id: string, data: string, eTag: string, doNotPurge: boolean): IAsyncOperation<DateTime> {
        return AsyncOperation.from(async () => { throw new Error('CacheService#writeEntryAsync1 not implemented') });
    }
    writeEntryAsync2(id: string, data: string, eTag: string, doNotPurge: boolean, defaultExpiry: number): IAsyncOperation<DateTime> {
        return AsyncOperation.from(async () => { throw new Error('CacheService#writeEntryAsync2 not implemented') });
    }
    toString(): string {
        throw new Error('CacheService#toString not implemented')
    }
}
