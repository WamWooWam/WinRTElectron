// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:11 2021
// </auto-generated>
// --------------------------------------------------

import { GetAppsInstalledLanguagesDelegate } from "./GetAppsInstalledLanguagesDelegate";
import { MarketInfo } from "./MarketInfo";
import { MarketValidationResponse } from "./MarketValidationResponse";
import { IVector } from "winrt/Windows/Foundation/Collections/IVector`1";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { AsyncOperation } from "winrt/Windows/Foundation/Interop/AsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { GeographicRegion } from "winrt/Windows/Globalization/GeographicRegion";
import { Language } from "winrt/Windows/Globalization/Language";
import { MarketValidity } from "./MarketValidity";

// @GenerateShim('Platform.Globalization.Marketization')
export class Marketization implements IStringable { 
    static disableAllPrimaryLanguageInteractions: boolean = null;
    static disablePrimaryLanguageOverride: boolean = null;
    static usePhysicalLocationOnlyForMarket: boolean = null;
    static hasPendingUpdate: boolean = null;
    static checkForMarketValidityAsync(): IAsyncOperation<MarketValidationResponse> {
        return AsyncOperation.from(async () => { 
            // throw new Error('Marketization#checkForMarketValidityAsync not implemented')
            let validity  = new MarketValidationResponse();
            validity.validationResult = MarketValidity.isValid;
            return validity;
         });
    }
    static deriveDefaultMarket(language: Language, location: GeographicRegion): MarketInfo {
        throw new Error('Marketization#deriveDefaultMarket not implemented')
    }
    static getCurrentMarket(): string {
        // throw new Error('Marketization#getCurrentMarket not implemented')
        return "en-gb";
    }
    static getCurrentMarketInfo(): MarketInfo {
        // throw new Error('Marketization#getCurrentMarketInfo not implemented')
        return new MarketInfo(new Language("en-GB"), new GeographicRegion());
    }
    static getDominantMarketForLocation(): MarketInfo {
        throw new Error('Marketization#getDominantMarketForLocation not implemented')
    }
    static getLocalizedMarketInfoDisplayName(marketInfo: MarketInfo): string {
        throw new Error('Marketization#getLocalizedMarketInfoDisplayName not implemented')
    }
    static getLocationFromServerAsync(): IAsyncOperation<string> {
        return AsyncOperation.from(async () => { throw new Error('Marketization#getLocationFromServerAsync not implemented') });
    }
    static getMarketLocation(): string {
        throw new Error('Marketization#getMarketLocation not implemented')
    }
    static getMarketsForCurrentLanguageAndLocation(): IVector<MarketInfo> {
        throw new Error('Marketization#getMarketsForCurrentLanguageAndLocation not implemented')
    }
    static getQualifiedLanguage(): Language {
        throw new Error('Marketization#getQualifiedLanguage not implemented')
    }
    static getQualifiedLanguageString(): string {
        // throw new Error('Marketization#getQualifiedLanguageString not implemented')
        return "en-GB";
    }
    static getRegionsList(): IVector<GeographicRegion> {
        throw new Error('Marketization#getRegionsList not implemented')
    }
    static isCurrentLanguageLocationValid(): boolean {
        throw new Error('Marketization#isCurrentLanguageLocationValid not implemented')
    }
    static isPersistedMarketValid(): boolean {
        throw new Error('Marketization#isPersistedMarketValid not implemented')
    }
    static isSavedLanguageAndLocationSame(): boolean {
        throw new Error('Marketization#isSavedLanguageAndLocationSame not implemented')
    }
    static overrideLanguageMarket(language: string, locations: string): void {
        console.warn('Marketization#overrideLanguageMarket not implemented')
    }
    static setCurrentMarket(value: string): void {
        console.warn('Marketization#setCurrentMarket not implemented')
    }
    static setInstalledAppLanguagesDelegate(getAppsInstalledLangDelegate: GetAppsInstalledLanguagesDelegate): void {
        console.warn('Marketization#setInstalledAppLanguagesDelegate not implemented')
    }
    static setPersistedMarket(value: string): void {
        console.warn('Marketization#setPersistedMarket not implemented')
    }
    static updateSavedLanguageAndLocation(): void {
        console.warn('Marketization#updateSavedLanguageAndLocation not implemented')
    }
    toString(): string {
        throw new Error('Marketization#toString not implemented')
    }
}
