// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:11 2021
// </auto-generated>
// --------------------------------------------------

import { DictionaryConfigurationItem } from "./DictionaryConfigurationItem";
import { IIterable } from "winrt/Windows/Foundation/Collections/IIterable`1";
import { IIterator } from "winrt/Windows/Foundation/Collections/IIterator`1";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { Vector } from "winrt/Windows/Foundation/Interop/Vector`1";
import { ConfigurationManager } from "./ConfigurationManager";
type IBindableIterable = any
type IBindableIterator = any

export class ListConfigurationItem extends Vector<any> { 
    static readonly empty: ListConfigurationItem = new ListConfigurationItem(-1);
    readonly value: IVectorView<any> = this;
    
    private __sqliteId: number;
    constructor(sqliteId: number = -1) {
        super();
        this.__sqliteId = sqliteId;
        

        if (sqliteId != -1) {
            const manager = ConfigurationManager.instance;
            let items = manager.getCollectionChildItems(sqliteId);
            for (const item of items) {
                let configItem = manager.createConfigurationItem(item);
                if (configItem) {
                    this.append(configItem);
                }
            }
        }
    }

    getBool(index: number): boolean {
        // throw new Error('ListConfigurationItem#getBool not implemented')
        return this.getAt(index).value;
    }
    getDictionary(index: number): DictionaryConfigurationItem {
        return this.getAt(index).value;
    }
    getInt32(index: number): number {
        return this.getAt(index).value;
    }
    getList(index: number): ListConfigurationItem {
        return this.getAt(index).value;
    }
    getString(index: number): string {
        return this.getAt(index).value;
    }
    toString(): string {
        throw new Error('ListConfigurationItem#toString not implemented')
    }
}
