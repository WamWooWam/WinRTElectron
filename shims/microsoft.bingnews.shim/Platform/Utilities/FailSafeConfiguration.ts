// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:11 2021
// </auto-generated>
// --------------------------------------------------

import { FailSafeConfigurationChangedEvent } from "./FailSafeConfigurationChangedEvent";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Platform.Utilities.FailSafeConfiguration')
export class FailSafeConfiguration implements IStringable { 
    static readonly default: FailSafeConfiguration = null;
    static isEnabled(providerName: string, featureName: string): boolean {
        throw new Error('FailSafeConfiguration#isEnabled not implemented')
    }
    static reload(): void {
        console.warn('FailSafeConfiguration#reload not implemented')
    }
    equals(obj: any): boolean {
        throw new Error('FailSafeConfiguration#equals not implemented')
    }
    getHashCode(): number {
        throw new Error('FailSafeConfiguration#getHashCode not implemented')
    }
    toString(): string {
        throw new Error('FailSafeConfiguration#toString not implemented')
    }

    private static __failSafeConfigurationChanged: Set<FailSafeConfigurationChangedEvent> = new Set();
    @Enumerable(true)
    static set onfailsafeconfigurationchanged(handler: FailSafeConfigurationChangedEvent) {
        FailSafeConfiguration.__failSafeConfigurationChanged.add(handler);
    }

    static addEventListener(name: string, handler: any) {
        switch (name) {
            case 'failsafeconfigurationchanged':
                FailSafeConfiguration.__failSafeConfigurationChanged.add(handler);
                break;
        }
    }

    static removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'failsafeconfigurationchanged':
                FailSafeConfiguration.__failSafeConfigurationChanged.delete(handler);
                break;
        }
    }
}
