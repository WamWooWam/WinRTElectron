// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Platform 3.0.0.0 at Fri Jun  4 19:45:11 2021
// </auto-generated>
// --------------------------------------------------

import { Collections } from "./Collections";
import { DictionaryConfigurationItem } from "./Configuration/DictionaryConfigurationItem";
import { AppManifest } from "./Configuration/Manifest/AppManifest";
import { PlatformEventSourceAccessor } from "./Diagnostics/PlatformEventSourceAccessor";
import { InstrumentationManager } from "./Instrumentation/InstrumentationManager";
import { Process } from "./Process";
import { StringResourceLoader } from "./Resources/StringResourceLoader";
import { IStringable } from "winrt/Windows/Foundation/IStringable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { ConfigurationManager } from "./Configuration/ConfigurationManager";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";

@GenerateShim('Platform.ServicesAccessor')
export class ServicesAccessor implements IStringable { 
    static readonly process: Process = new Process();

    @Enumerable(true)
    static get appConfig(): DictionaryConfigurationItem {
        return ConfigurationManager.app;
    }
    @Enumerable(true)
    static get platformConfig(): DictionaryConfigurationItem {
        return ConfigurationManager.platform;
    }
    @Enumerable(true)
    static get configuration(): DictionaryConfigurationItem {
        return ConfigurationManager.custom;
    }
    @Enumerable(true)
    static get manifest(): AppManifest {
        return ConfigurationManager.manifest;
    }

    static readonly isConfigurationInitialized: boolean = true;
    static readonly instrumentation: InstrumentationManager = new InstrumentationManager();
    static readonly platformEventSource: PlatformEventSourceAccessor = new PlatformEventSourceAccessor();
    static readonly resourceLoader: StringResourceLoader = new StringResourceLoader();
    static readonly collections: Collections = new Collections();
    static resetResourceLoader(): void {
        console.warn('ServicesAccessor#resetResourceLoader not implemented')
    }
    toString(): string {
        throw new Error('ServicesAccessor#toString not implemented')
    }
}
