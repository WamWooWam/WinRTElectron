// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:39 2021
// </auto-generated>
// --------------------------------------------------

import { CalendarFolderType } from "../CalendarFolderType";
import { ContactFolderType } from "../ContactFolderType";
import { FolderType } from "../FolderType";
import { IAccount } from "../IAccount";
import { ICollection } from "../ICollection";
import { IFolderManager } from "../IFolderManager";
import { MailFolderType } from "../MailFolderType";
import { MailViewType } from "../MailViewType";
import { FolderPriority } from "./FolderPriority";
import { IFolderChange } from "./IFolderChange";
import { IFolderPrivate } from "./IFolderPrivate";

export interface IFolderManagerPrivate extends IFolderManager {
    // getFolder(hstrAccountId: string, hstrServerFolderId: string): IFolderPrivate;
    // getRootFolderCollection(hstrAccountId: string): ICollection;
    // getRootFolderCollection_ByType(hstrAccountId: string, eType: FolderType): ICollection;
    // getAllFoldersCollection_ByAccount(hstrAccountId: string, eType: FolderType): ICollection;
    // getAllFoldersCollection_ByAccount_IncludingPendingDeletes(hstrAccountId: string, eType: FolderType): ICollection;
    // getSpecialMailFolder(hstrAccountId: string, eType: MailFolderType): string;
    // getSpecialContactFolder(hstrAccountId: string, eType: ContactFolderType): string;
    // getSpecialCalendarFolder(hstrAccountId: string, eType: CalendarFolderType): string;
    // getAllSpecialMailFolders(eType: MailFolderType): ICollection;
    // getFolderCollectionByPriority(pAccount: IAccount, toPriority: FolderPriority): ICollection;
    // getFolderCollectionForIsSyncNeeded(pAccount: IAccount): ICollection;
    // createFolder(hstrAccountId: string): IFolderPrivate;
    // loadFolder(hstrId: string): IFolderPrivate;
    // deleteAllSyncingFolders(hstrAccountId: string): void;
    // swapDefaultCalendarFolder(hstrAccountId: string, hstrNewDefaultCalendarId: string): void;
    // swapMailSpecialFolder(hstrAccountId: string, eType: MailFolderType, hstrNewSpecialFolderId: string): boolean;
    // getViewTypeForFolderType(eFolderType: MailFolderType): MailViewType;
    // enforceFolderListConstraints(hstrAccountId: string): void;
    // getNextFolderChange(hstrAccountId: string): IFolderChange;
    // hasPendingFolderChanges(hstrAccountId: string): boolean;
    // updateFolderServerIdPaths(hstrAccountId: string, hstrOldFolderPath: string, hstrNewFolderPath: string): void;
    // getDescendantFoldersCollection(hstrAccountId: string, hstrFolderPath: string): ICollection;
}
