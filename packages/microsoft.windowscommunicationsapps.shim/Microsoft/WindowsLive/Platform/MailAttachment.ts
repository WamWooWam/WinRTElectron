// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:38 2021
// </auto-generated>
// --------------------------------------------------

import { AttachmentComposeStatus } from "./AttachmentComposeStatus";
import { AttachmentSyncStatus } from "./AttachmentSyncStatus";
import { AttachmentUIType } from "./AttachmentUIType";
import { IMailAttachment } from "./IMailAttachment";
import { IMailMessage } from "./IMailMessage";
import { IObject } from "./IObject";
import { ITransientObjectHolder } from "./ITransientObjectHolder";
import { ObjectChangedHandler } from "./ObjectChangedHandler";
import { PMFileType } from "./PMFileType";
import { Enumerable } from "winrt/Windows/Foundation/Interop/Enumerable";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { IRandomAccessStream } from "winrt/Windows/Storage/Streams/IRandomAccessStream";

@GenerateShim('Microsoft.WindowsLive.Platform.MailAttachment')
export class MailAttachment implements IMailAttachment, IObject { 
    uiType: AttachmentUIType = null;
    transcodedSize: number = null;
    transcodedFilename: string = null;
    photoMailFileType: PMFileType = null;
    fileName: string = null;
    fileAccessToken: string = null;
    contentType: string = null;
    contentLocation: string = null;
    contentId: string = null;
    composeStatus: AttachmentComposeStatus = null;
    bodyFile: string = null;
    readonly bodyUri: string = null;
    readonly size: number = null;
    readonly syncStatus: AttachmentSyncStatus = null;
    readonly canDelete: boolean = null;
    readonly canEdit: boolean = null;
    readonly isObjectValid: boolean = null;
    readonly objectId: string = null;
    readonly objectType: string = null;
    getBody(): IRandomAccessStream {
        throw new Error('MailAttachment#getBody not implemented')
    }
    createBody(pBody: IRandomAccessStream): void {
        console.warn('MailAttachment#createBody not implemented')
    }
    createBodyFromFile(fileName: string, fileSize: number): void {
        console.warn('MailAttachment#createBodyFromFile not implemented')
    }
    downloadBody(): void {
        console.warn('MailAttachment#downloadBody not implemented')
    }
    cancelDownload(): void {
        console.warn('MailAttachment#cancelDownload not implemented')
    }
    clone(pNewParent: IMailMessage): IMailAttachment {
        throw new Error('MailAttachment#clone not implemented')
    }
    commit(): void {
        console.warn('MailAttachment#commit not implemented')
    }
    deleteObject(): void {
        console.warn('MailAttachment#deleteObject not implemented')
    }
    getKeepAlive(): ITransientObjectHolder {
        throw new Error('MailAttachment#getKeepAlive not implemented')
    }

    private __changed: Set<ObjectChangedHandler> = new Set();
    @Enumerable(true)
    set onchanged(handler: ObjectChangedHandler) {
        this.__changed.add(handler);
    }

    private __deleted: Set<ObjectChangedHandler> = new Set();
    @Enumerable(true)
    set ondeleted(handler: ObjectChangedHandler) {
        this.__deleted.add(handler);
    }

    addEventListener(name: string, handler: any) {
        switch (name) {
            case 'changed':
                this.__changed.add(handler);
                break;
            case 'deleted':
                this.__deleted.add(handler);
                break;
        }
    }

    removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'changed':
                this.__changed.delete(handler);
                break;
            case 'deleted':
                this.__deleted.delete(handler);
                break;
        }
    }
}
