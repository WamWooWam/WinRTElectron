// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:38 2021
// </auto-generated>
// --------------------------------------------------

import { IAccount } from "./IAccount";
import { ICollection } from "./ICollection";
import { IFolder } from "./IFolder";
import { IMailMessage } from "./IMailMessage";
import { IMailView } from "./IMailView";
import { IObject } from "./IObject";
import { MailLaunchArguments } from "./MailLaunchArguments";
import { MailMessageChangeOperation } from "./MailMessageChangeOperation";
import { MailViewScenario } from "./MailViewScenario";
import { MailViewType } from "./MailViewType";
import { SanitizedVersion } from "./SanitizedVersion";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { IRandomAccessStream } from "winrt/Windows/Storage/Streams/IRandomAccessStream";

export interface IMailManager {
    getPermanentlyFailedMessageCollection(hstrAccountId: string): ICollection;
    createMessage(pAccount: IAccount): IMailMessage;
    createMessageInFolder(pFolder: IFolder): IMailMessage;
    createDraftMessage(pSourceView: IMailView): IMailMessage;
    createMessageFromMime(pFolder: IFolder, pStream: IRandomAccessStream, fAllowCommit: boolean): IMailMessage;
    createMessageFromMimeAsync(pFolder: IFolder, pStream: IRandomAccessStream, fAllowCommit: boolean): IAsyncOperation<IMailMessage>;
    loadMessage(hstrMessageId: string): IMailMessage;
    waitForInstanceNumberOnMessage(hstrMessageId: string, uInstanceNumber: number): IAsyncAction;
    batchChange(pCollectionToKeepInView: ICollection, hstrSourceViewId: string, changeType: MailMessageChangeOperation, objectIds: IVectorView<string>): void;
    batchMove(hstrSourceViewId: string, hstrDestViewId: string, objectIds: IVectorView<string>): void;
    batchDelete(objectIds: IVectorView<string>): void;
    search(pScope: IObject, hstrSearchFilter: string, hstrSearchLocale: string, uiPageSize: number): ICollection;
    setMailVisible(fVisible: boolean): void;
    getMailView(type: MailViewType, pAccount: IAccount): IMailView;
    getMailViews(scenario: MailViewScenario, accountId: string): ICollection;
    ensureMailView(type: MailViewType, accountId: string, objectId: string): IMailView;
    keepObjectInView(pFilteredCollection: ICollection, objectIds: IVectorView<string>): void;
    getMessageCollectionBySanitizedVersion(eVersion: SanitizedVersion): ICollection;
    parseLaunchArguments(launchArguments: string): MailLaunchArguments;
    tryLoadMailView(viewObjectId: string): IMailView;
    getIncludeSentItemsInConversation(): boolean;
    setIncludeSentItemsInConversation(fIncludeSentItemsInConversation: boolean): void;
    checkIncludeSentItemsInConversationForChange(): void;
}
