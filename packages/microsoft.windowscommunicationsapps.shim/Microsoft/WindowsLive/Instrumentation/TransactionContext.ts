// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft 255.255.255.255 at Wed Apr 14 20:25:37 2021
// </auto-generated>
// --------------------------------------------------

import { ITransactionContext } from "./ITransactionContext";
import { ITransactionId } from "./ITransactionId";
import { PropertyId } from "./PropertyId";
import { ScenarioId } from "./ScenarioId";
import { TransactionId } from "./TransactionId";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.WindowsLive.Instrumentation.TransactionContext')
export class TransactionContext implements ITransactionContext { 
    readonly experienceId: string = null;
    readonly market: number = null;
    readonly scenarioId: ScenarioId = null;
    readonly transactionId: ITransactionId = null;
    // constructor(hstrBase64EncodedTxContext: string);
    // constructor(scenarioId: ScenarioId, market: number);
    // constructor(scenarioId: ScenarioId, market: number, experienceId: string, requestId: string);
    // constructor(scenarioId: ScenarioId, market: number, experienceId: string, requestId: string, transactionId: TransactionId);
    constructor(...args) { }
    toBase64String(): string {
        throw new Error('TransactionContext#toBase64String not implemented')
    }
    getNextTransactionContext(targetId: PropertyId): ITransactionContext {
        throw new Error('TransactionContext#getNextTransactionContext not implemented')
    }
    isEqual(pTransactionContext: ITransactionContext): number {
        throw new Error('TransactionContext#isEqual not implemented')
    }
}
