Jx.delayDefine(People,"Promises",function(){var t=window.People,i=Windows.Foundation,n=t.Promises={};n.errorIfTimeout=function(n,t){var i=WinJS.Promise.timeout(t).then(function(){return WinJS.Promise.wrapError("Timeout happened")});return WinJS.Promise.any([n,i]).then(function(n){return n.value},function(t){return n.cancel(),t.value})};n.synchronousPromise=function(n,t,i){return new WinJS.Promise(function(r,u){var f=n.apply(t,i);f instanceof Error?u(f):r(f)})};n.waitForPropertyChange=function(n,t){var i,r=n[t];return new WinJS.Promise(function(u){i=function(f){Array.prototype.indexOf.call(f,t)!==-1&&r!==n[t]&&(n.removeEventListener("changed",i),u(n[t]))};n.addEventListener("changed",i)},function(){n.removeEventListener("changed",i)})};n.waitForSettingsResult=function(n,t){var i;return new WinJS.Promise(function(r){i=function(u){Array.prototype.indexOf.call(u,"settingsSyncTime")!==-1&&n.settingsSyncTime>=t&&(n.removeEventListener("changed",i),r(n.settingsResult))};n.addEventListener("changed",i)},function(){n.removeEventListener("changed",i)})};n.commitAndWait=function(t,i,r,u){var f=n.waitForPropertyChange(i,r);return n.commitAndWaitForPromise(t,i,f,u)};n.commitAndWaitForPromise=function(t,i,r){try{i.commit()}catch(u){return Jx.log.exception("Promises.commitAndWait failed on commit()",u),r.cancel(),WinJS.Promise.wrapError(u)}return Jx.log.info("Commited object type="+i.objectType+" id="+i.objectId),n.errorIfTimeout(r,t)}})