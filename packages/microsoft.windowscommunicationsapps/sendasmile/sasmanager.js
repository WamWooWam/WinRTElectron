Jx.delayDefine(window,"SasManager",function(){window.SasManager={_config:null,sasControl:null,_ownPlatform:null,_helpFlyoutCallbackFn:null};var f=0,r=null,n=null,s="",i=null,e=null,o=null,u=null,t=null,h="sashide",c="sasshow",l="sasenabled";SasManager.init=function(r,u,e){var o,h;if(s=r,f=Jx.appId?Jx.appId:0,i=!e&&Jx.root?Jx.root._platform:e,!i)try{SasManager._ownPlatform||(SasManager._ownPlatform=new Microsoft.WindowsLive.Platform.Client("launch"),o=Jx.activation,o.addListener(o.suspending,SasManager._onSuspending,this),o.addListener(o.resuming,SasManager._onResuming,this));i=SasManager._ownPlatform}catch(c){Jx.log.exception("Feedback: Platform failed to initialize",c)}h=document.getElementById(u);h&&(t=h.parentNode,t.winControl?(n=t.winControl.getCommandById(u),SasManager._trySetHidden()):Jx.log.error("Feedback: App bar is not a WinJS control"));Jx.initEvents(SasManager);SasManager._config||SasManager._initConfig()};SasManager.handleFeedbackClick=function(){SasManager.sasControl||(SasManager.sasControl=new Jx.Sas(Jx.getAppNameFromId(Jx.appId),s),Jx.root.append(SasManager.sasControl),r=document.createElement("span"),r.id="sasFlyoutCtr",document.body.appendChild(r),SasManager.sasControl.setUserInfo(SasManager._getUserId(),SasManager.showInAppBar()));SasManager.sasControl.hasUI()||SasManager.sasControl.initUI(r);try{t&&t.winControl.hide()}catch(n){Jx.log.exception("Feedback: Unable to hide appbar",n)}SasManager.sasControl.show.apply(SasManager.sasControl)};SasManager.shutdown=function(){SasManager.sasControl&&(SasManager.sasControl.shutdownUI(),SasManager.sasControl=null,r.outerText="",r=null);SasManager=null};SasManager.setHelpFlyoutCallback=function(n){SasManager._helpFlyoutCallbackFn=n};SasManager.getSettingsCommand=function(){return new Windows.UI.ApplicationSettings.SettingsCommand("settings.feedback",Jx.res.getString("/strings/sasSurveyHeader"),SasManager.handleFeedbackClick)};SasManager.commandShown=function(){return n&&!n.hidden};SasManager.showInAppBar=function(){Jx.mark("SasManager:showInAppBar,StartTA,SasManager");var n=false;try{SasManager._config&&(n=SasManager._config.enableFeedback&&SasManager._config.application.lookup(f).addAppBarButton&&!SasManager._isRetailExperience())}catch(t){Jx.log.exception("Feedback: Error determining whether or not to show SaS in the appbar",t)}return Jx.mark("SasManager:showInAppBar,StopTA,SasManager"),n};SasManager.isMarketSupported=function(){return e===null&&(e=SasManager._findMarketInConfig()),e};SasManager.addListener=function(n,t,i){return Jx.addListener(SasManager,n,t,i)};SasManager.removeListener=function(n,t,i){return Jx.removeListener(SasManager,n,t,i)};SasManager._isRetailExperience=function(){var n=Jx.appData.localSettings();return n.get("RetailExperience")};SasManager._findMarketInConfig=function(){var t=SasManager.getMarket(),n,i;try{return n=SasManager._config.supportedMarkets.market[t.toLowerCase()],n||(i=t.substr(0,t.lastIndexOf("-")+1)+"*",n=SasManager._config.supportedMarkets.market[i.toLowerCase()]),n}catch(r){return Jx.log.exception("Feedback: Error when attempting to find market in configuration",r),null}};SasManager.getLanguage=function(){var n,i,t;return u===null&&(n=SasManager._findMarketInConfig(),i=SasManager.getMarket(),n&&n.language?u=n.language:(t=i.split("-"),u=t[0],t.length>2&&(u+="-"+t[1]))),u};SasManager.addSettingsEntry=function(){try{if(SasManager._config)return SasManager._config.enableFeedback&&SasManager._config.application.lookup(f).addSettingsLink&&SasManager.isMarketSupported()&&!SasManager._isRetailExperience()}catch(n){Jx.log.exception("Feedback: Error in addSettingsEntry",n)}return false};SasManager.enableIssueReporting=function(){return SasManager._config.application.lookup(f).enableLogCollection};SasManager.getConfig=function(){return SasManager._config};SasManager.getMarket=function(){return o===null&&(o=Microsoft.WindowsLive.Market.get(Microsoft.WindowsLive.FallbackLogic.language)),o};SasManager.fireShowEvent=function(){try{Jx.raiseEvent(SasManager,c)}catch(n){Jx.log.exception("Feedback: error raising show event",n)}};SasManager.fireHideEvent=function(){try{Jx.raiseEvent(SasManager,h)}catch(n){Jx.log.exception("Feedback: error raising hide event",n)}};SasManager.fireEnabledEvent=function(){try{Jx.raiseEvent(SasManager,l)}catch(n){Jx.log.exception("Feedback: error raising enabled event",n)}};SasManager._onSuspending=function(){if(SasManager._ownPlatform)try{SasManager._ownPlatform.suspend()}catch(n){Jx.log.exception("Feedback: error suspending",n)}};SasManager._onResuming=function(){SasManager._ownPlatform&&SasManager._ownPlatform.resume()};SasManager._initConfig=function(){if(SasManager._config={enableFeedback:false,application:{lookup:function(){return{addSettingsLink:false,enableLogCollection:false,addAppBarButton:false,surveyId:null}}},supportedMarkets:"",privacyUrl:"",fmsDomain:""},i&&!i.isMock){var t=Microsoft.WindowsLive.Config.Shared.Feedback.loadAsync(i),r=function(t){SasManager._config=t.target;n&&SasManager._trySetHidden();e=null};t.done(function(t){SasManager._config=t;SasManager._config.addEventListener("changed",r,false);n&&SasManager._trySetHidden()},function(){Jx.log.error("Feedback: Error loading dynamic config")})}};SasManager._getUserId=function(){var n="Anonymous";try{n=i.accountManager.defaultAccount.userDisplayName}catch(t){Jx.log.exception("Feedback: Issue getting user ID from contacts platform",t)}return n};SasManager._trySetHidden=function(){t&&t.winControl&&n?t.winControl.hidden?SasManager._initAppBarButton():t.winControl.addEventListener("afterhide",SasManager._appBarHidden,false):Jx.log.error("Feedback: initialization error setting command hidden state.")};SasManager._initAppBarButton=function(){try{n.icon="";n.onclick=SasManager.handleFeedbackClick;n.type="button";n.label=Jx.res.getString("/strings/sasSurveyHeader");n.tooltip=Jx.res.getString("/strings/sasSurveyHeader");n.section="global";n.hidden=!SasManager.showInAppBar();SasManager.fireEnabledEvent()}catch(t){Jx.log.exception("Feedback: Issue initializing App Bar button",t)}};SasManager._appBarHidden=function(){SasManager._initAppBarButton();t.winControl.removeEventListener("afterhide",SasManager._appBarHidden,false)}})