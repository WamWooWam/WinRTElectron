Jx.delayDefine(Mail,"AccountNameHeader",function(){"use strict";Mail.AccountNameHeader=function(n){this.initComponent();this._selection=n;this._element=null;this._disposer=null;this._hooks=null};Jx.augment(Mail.AccountNameHeader,Jx.Component);Mail.AccountNameHeader.prototype.getUI=function(n){n.html="<div id='mailNavPaneHeader' role='heading'>"+Jx.escapeHtml(this._selection.account.name)+"<\/div>"};Mail.AccountNameHeader.prototype.activateUI=function(){var n=this._selection;this._disposer=new Mail.Disposer(new Mail.EventHook(n,"navChanged",this._onNavigation,this));this._hookAccount(n.account);this._element=document.getElementById("mailNavPaneHeader");this._launchUpdateDialogIfNeeded()};Mail.AccountNameHeader.prototype.deactivateUI=function(){Jx.dispose(this._disposer)};Mail.AccountNameHeader.prototype._onAccountChanged=function(n){Mail.Validators.hasPropertyChanged(n,"displayName")&&(this._element.title=this._element.innerText=this._selection.account.name)};Mail.AccountNameHeader.prototype._onResourceChanged=function(n){(Mail.Validators.hasPropertyChanged(n,"lastSyncResult")||Mail.Validators.hasPropertyChanged(n,"lastPushResult"))&&this._launchUpdateDialogIfNeeded()};Mail.AccountNameHeader.prototype._onNavigation=function(n){if(n.accountChanged){var t=this._selection.account;this._hookAccount(t);this._element.title=this._element.innerText=t.name}};Mail.AccountNameHeader.prototype._hookAccount=function(n){this._hooks=this._disposer.replace(this._hooks,[new Mail.EventHook(n,"changed",this._onAccountChanged,this)]);var t=n.mailResource;t&&this._hooks.push(new Mail.EventHook(t,"changed",this._onResourceChanged,this))};Mail.AccountNameHeader.prototype._launchUpdateDialogIfNeeded=function(){var n=this._selection.account,t=Mail.AccountSettings.createErrorHandler(n.platformObject,n.mailResource);t.handler(false)}})