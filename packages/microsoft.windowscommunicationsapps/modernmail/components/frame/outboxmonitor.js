Jx.delayDefine(Mail,"OutboxMonitor",function(){"use strict";Mail.OutboxMonitor=function(){this._accountsChanged=this._accountsChanged.bind(this);this._messageChangedListener=this._messageChangedListener.bind(this);this._platform=null;this._messageBar=null;this._accounts=null;this._outboxCollections=null;this._messages=null;this._queueHandler=null};var n=Mail.OutboxMonitor.prototype,t=Microsoft.WindowsLive.Platform;n.init=function(n,t,i){this._messages={};this._platform=t;this._messageBar=n;this._queueHandler=i;i.init(this._messageBar,this._messages,this._platform);this._initializeListeners();Jx.log.info("Mail.OutboxMonitor - Init complete")};n.dispose=function(){try{this._removeAllListeners()}catch(n){Jx.log.exception("Mail.OutboxMonitor - Exception during shutdown",n)}this._queueHandler&&this._queueHandler.dispose();this._queueHandler=null;this._messages=null;this._messageBar=null;this._platform=null;Jx.log.info("Mail.OutboxMonitor - Shutdown complete")};n._initializeListeners=function(){this._outboxCollections={};this._accounts=this._platform.accountManager.getConnectedAccountsByScenario(t.ApplicationScenario.mail,t.ConnectedFilter.normal,t.AccountSort.name);this._accounts.addEventListener("collectionchanged",this._accountsChanged);for(var n=0,i=this._accounts.count;n<i;n++)this._addAccount(this._accounts.item(n));this._accounts.unlock()};n._removeAllListeners=function(){this._accounts&&(this._accounts.removeEventListener("collectionchanged",this._accountsChanged),this._accounts.dispose(),this._accounts=null,Object.keys(this._messages).forEach(function(n){this._removeMessage(n)},this),Object.keys(this._outboxCollections).forEach(function(n){this._removeAccount(n)},this),this._outboxCollections=null)};n._accountsChanged=function(n){var i=t.CollectionChangeType,r=n.eType;r===i.itemRemoved?this._removeAccount(n.objectId):r===i.itemAdded?this._addAccount(this._accounts.item(n.index)):r===i.reset&&(this._removeAllListeners(),this._initializeListeners())};n._addAccount=function(n){var i,u,r,f;(i=n.objectId,u=this._platform.mailManager.ensureMailView(t.MailViewType.outbox,i,""),u)&&(r=u.getMessages(t.FilterCriteria.all),f=this._getOutboxListener(i),r.addEventListener("collectionchanged",f),this._outboxCollections[i]={account:n,collection:r,listener:f},this._addOutboxCollection(r,n),r.unlock(),Jx.log.info("Mail.OutboxMonitor - Added account "+i+" for listening to outbox errors"))};n._addOutboxCollection=function(n,t){for(var r,i=0,u=n.count;i<u;i++)r=n.item(i),this._addMessage(r,t),this._checkMessageForError(r,t)};n._addMessage=function(n,t){var i=n.objectId;this._messages[i]={message:n,account:t};n.addEventListener("changed",this._messageChangedListener);Jx.log.info("Mail.OutboxMonitor - Added message "+i+" for listening to errors")};n._checkMessageForError=function(n,i){if(n.isInSpecialFolderType(t.MailFolderType.outbox)){var r=this._queueHandler;r.checkForError(n,i)}};n._getOutboxListener=function(n){return function(i){var r,f;r=t.CollectionChangeType;f=this._outboxCollections[n];var u=f.collection,o=f.account,e=i.eType;e===r.itemRemoved?this._removeMessage(i.objectId):e===r.itemAdded?this._addMessage(u.item(i.index),o):e===r.reset&&(u.lock(),Object.keys(this._messages).forEach(function(n){this._removeMessage(n)},this),this._addOutboxCollection(u,o),u.unlock())}.bind(this)};n._messageChangedListener=function(n){var t=n.target,i=this._queueHandler;Jx.isObject(i)&&Mail.Validators.havePropertiesChanged(n,i.subscribedProperties)&&this._checkMessageForError(t,this._messages[t.objectId].account)};n._removeAccount=function(n){var t,i,r;if(t=this._outboxCollections[n],t){i=t.collection;i.removeEventListener("collectionchanged",t.listener);i.dispose();this._outboxCollections[n]=null;delete this._outboxCollections[n];for(r in this._messages)this._messages[r].account.objectId===n&&this._removeMessage(r);this._queueHandler.removeAccount(n)}};n._removeMessage=function(n){var t,i;t=this._messages[n];t&&(i=t.message,i.removeEventListener("changed",this._messageChangedListener),this._messages[n]=null,delete this._messages[n],this._queueHandler.removeMessage(n))}})