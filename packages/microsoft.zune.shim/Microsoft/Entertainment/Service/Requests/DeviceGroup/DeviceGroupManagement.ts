// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Thu Apr  8 00:47:24 2021
// </auto-generated>
// --------------------------------------------------

import { DeviceRegisterationStatus } from "./DeviceRegisterationStatus";
import { IDeviceAssociationResult } from "./IDeviceAssociationResult";
import { IDeviceGroupInfo } from "./IDeviceGroupInfo";
import { AsyncOperation, IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Service.Requests.DeviceGroup.DeviceGroupManagement')
export class DeviceGroupManagement {
    static registerDeviceAsync(fForceRegisterDevice: boolean): IAsyncOperation<IDeviceAssociationResult> {
        throw new Error('DeviceGroupManagement#registerDeviceAsync not implemented')
    }
    static deregisterDeviceAsync(): IAsyncOperation<IDeviceAssociationResult> {
        throw new Error('DeviceGroupManagement#deregisterDeviceAsync not implemented')
    }
    static getDeviceRegisterationStatus(): DeviceRegisterationStatus {
        throw new Error('DeviceGroupManagement#getDeviceRegisterationStatus not implemented')
    }
    static setDeviceRegisterationStatus(eDeviceRegisterationStatus: DeviceRegisterationStatus): void {
        console.warn('DeviceGroupManagement#setDeviceRegisterationStatus not implemented')
    }
    static getDeviceGroupInfoAsync(): IAsyncOperation<IDeviceGroupInfo> {
        // throw new Error('DeviceGroupManagement#getDeviceGroupInfoAsync not implemented')
        return AsyncOperation.from(async () => {
            return { canAddMoreDevices: true, isCurrentDeviceInGroup: true, nextRemoveDate: new Date(new Date(Date.now()).setMonth(8)) };
        })
    }
}
