// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { FileTransferRequestType } from "./FileTransferRequestType";
import { FileTransferStatus } from "./FileTransferStatus";
import { IFileDownload } from "./IFileDownload";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.FileDownload')
export class FileDownload implements IFileDownload { 
    albumArtistLibraryId: number = null;
    albumArtistMediaId: string = null;
    albumLibraryId: number = null;
    albumMediaId: string = null;
    bytesReceived: number = null;
    canRetry: boolean = null;
    contextLibraryId: number = null;
    contextLibraryTypeId: number = null;
    isBackground: boolean = null;
    isClosed: boolean = null;
    libraryId: number = null;
    libraryTypeId: number = null;
    mediaId: string = null;
    percentage: number = null;
    responseCode: number = null;
    seasonLibraryId: number = null;
    seasonNumber: number = null;
    seriesLibraryId: number = null;
    seriesMediaId: string = null;
    taskId: number = null;
    taskStatus: FileTransferStatus = null;
    taskType: FileTransferRequestType = null;
    totalBytesToReceive: number = null;
    restart(): void {
        console.warn('FileDownload#restart not implemented')
    }
    pause(): void {
        console.warn('FileDownload#pause not implemented')
    }
    resume(): void {
        console.warn('FileDownload#resume not implemented')
    }
    cancel(): void {
        console.warn('FileDownload#cancel not implemented')
    }
    closeAsync(): IAsyncOperation<IFileDownload> {
        throw new Error('FileDownload#closeAsync not implemented')
    }
}
