// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { IMediaProvider } from "./IMediaProvider";
import { MediaAvailability } from "./MediaAvailability";
import { MediaStorageLocation } from "./MediaStorageLocation";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";

@GenerateShim('Microsoft.Entertainment.Platform.MediaProvider')
export class MediaProvider implements IMediaProvider { 
    deleteMediaAsync(libraryType: number, piLibraryIds: IVectorView<number>, availabilityFilter: MediaAvailability): IAsyncAction {
        throw new Error('MediaProvider#deleteMediaAsync not implemented')
    }
    copyMediaAsync(from: MediaStorageLocation, to: MediaStorageLocation, libraryType: number, piLibraryIds: IVectorView<number>): IAsyncAction {
        throw new Error('MediaProvider#copyMediaAsync not implemented')
    }
    addMediaToCloudAsync(libraryType: number, piLibraryIds: IVectorView<number>): IAsyncAction {
        throw new Error('MediaProvider#addMediaToCloudAsync not implemented')
    }
    destroyDatabase(): void {
        console.warn('MediaProvider#destroyDatabase not implemented')
    }
    deleteFilesForMediaAsync(libraryType: number, piLibraryIds: IVectorView<number>, availabilityFilter: MediaAvailability): IAsyncAction {
        throw new Error('MediaProvider#deleteFilesForMediaAsync not implemented')
    }
}
