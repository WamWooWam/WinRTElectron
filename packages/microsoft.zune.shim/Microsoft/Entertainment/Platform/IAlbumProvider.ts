// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------

import { GetLibraryIdFromMediaIdReturnValue } from "./GetLibraryIdFromMediaIdReturnValue";
import { IAlbumMetadata } from "./IAlbumMetadata";
import { IPlayableMediaData } from "./IPlayableMediaData";
import { MediaAvailability } from "./MediaAvailability";
import { RequestType } from "./RequestType";
import { UpdateAlbumMetadataReturnValue } from "./UpdateAlbumMetadataReturnValue";
import { IVectorView } from "winrt/Windows/Foundation/Collections/IVectorView`1";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { IAsyncOperation } from "winrt/Windows/Foundation/IAsyncOperation`1";

export interface IAlbumProvider {
    getPlayabilityByLibraryIdAsync(nLibraryId: number, availabilityFilter: MediaAvailability): IAsyncOperation<IVectorView<IPlayableMediaData>>;
    getLibraryIdFromMediaIdAsync(mediaId: string): IAsyncOperation<GetLibraryIdFromMediaIdReturnValue>;
    updateAlbumMetadataAsync(pIAlbumMetadata: IAlbumMetadata, requestType: RequestType, iAlbumId: number): IAsyncOperation<UpdateAlbumMetadataReturnValue>;
    setPlayedStatusAsync(libraryId: number, value: number): IAsyncAction;
}
