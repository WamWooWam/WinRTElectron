// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Entertainment 255.255.255.255 at Mon Mar 29 16:23:02 2021
// </auto-generated>
// --------------------------------------------------


export interface IProviders {
    isAddAlbumAndFindTrackIdBasedOnMetadataEndEnabled: boolean;
    isAddAlbumAndFindTrackIdBasedOnMetadataStartEnabled: boolean;
    isAddAlbumAndFindTrackIdEndEnabled: boolean;
    isAddAlbumAndFindTrackIdStartEnabled: boolean;
    isAddAlbumWithTitleArtistEnabled: boolean;
    isAddAudioAlbumEndEnabled: boolean;
    isAddAudioAlbumStartEnabled: boolean;
    isAddFileEndEnabled: boolean;
    isAddFileStartEnabled: boolean;
    isAddFolderEndEnabled: boolean;
    isAddFolderStartEnabled: boolean;
    isAddMediaEndEnabled: boolean;
    isAddMediaStartEnabled: boolean;
    isAddPersonEndEnabled: boolean;
    isAddPersonLinkEndEnabled: boolean;
    isAddPersonLinkStartEnabled: boolean;
    isAddPersonLinksEndEnabled: boolean;
    isAddPersonLinksStartEnabled: boolean;
    isAddPersonStartEnabled: boolean;
    isAddTrackEndEnabled: boolean;
    isAddTrackFileEndEnabled: boolean;
    isAddTrackFileStartEnabled: boolean;
    isAddTrackStartEnabled: boolean;
    isAddingAlbumEnabled: boolean;
    isAddingFileEnabled: boolean;
    isAddingFolderEnabled: boolean;
    isAddingPersonEnabled: boolean;
    isAddingPersonLinkEnabled: boolean;
    isAddingTrackEnabled: boolean;
    isAddingTrackEntryEnabled: boolean;
    isAddingUnknownArtistEnabled: boolean;
    isAlbumAsVariousArtistsEnabled: boolean;
    isFindAndGetAudioTrackEndEnabled: boolean;
    isFindAndGetAudioTrackStartEnabled: boolean;
    isFindArtistAndAlbumEndEnabled: boolean;
    isFindArtistAndAlbumStartEnabled: boolean;
    isFindTrackIdAndAlbumBasedOnTrackSmidEndEnabled: boolean;
    isFindTrackIdAndAlbumBasedOnTrackSmidStartEnabled: boolean;
    isFoundExistingTrackEnabled: boolean;
    isFoundTrackAndAlbumEnabled: boolean;
    isFoundTrackBySmidEnabled: boolean;
    isPromotingTrackArtistEnabled: boolean;
    isRecomputeAlbumReleaseYearEndEnabled: boolean;
    isRecomputeAlbumReleaseYearStartEnabled: boolean;
    isReflectTrackFilesStateEndEnabled: boolean;
    isReflectTrackFilesStateStartEnabled: boolean;
    isSetTrackRatingFromFileEnabled: boolean;
    isSetUnknownGenreEnabled: boolean;
    isSplitExistingFileEnabled: boolean;
    isTrackIsAudioBookEnabled: boolean;
    isUpdateAlbumSetGenreEnabled: boolean;
    isUpdateAlbumVisibilityEnabled: boolean;
    isUpdateCurrentAudioAlbumEndEnabled: boolean;
    isUpdateCurrentAudioAlbumStartEnabled: boolean;
    isUpdateCurrentTrackEndEnabled: boolean;
    isUpdateCurrentTrackStartEnabled: boolean;
    isUpdateFileEndEnabled: boolean;
    isUpdateFileStartEnabled: boolean;
    isUpdateOldAlbumVisibilityEnabled: boolean;
    isUpdatePlaylistContentsEndEnabled: boolean;
    isUpdatePlaylistContentsStartEnabled: boolean;
    isUpdatingAlbumAcquisitionDateEnabled: boolean;
    isUpdatingAlbumEnabled: boolean;
    isUpdatingFileCountsEnabled: boolean;
    isUpdatingFileEnabled: boolean;
    isUpdatingPersonEnabled: boolean;
    isUpdatingPlaylistItemWithMediaIdEnabled: boolean;
    isUpdatingTrackAcquisitionDateEnabled: boolean;
    isUpdatingTrackEnabled: boolean;
    traceAddMediaStart(): void;
    traceAddMediaEnd(): void;
    traceAddTrackStart(): void;
    traceAddTrackEnd(): void;
    traceAddAlbumAndFindTrackIdStart(): void;
    traceAddAlbumAndFindTrackIdEnd(): void;
    traceFindTrackIdAndAlbumBasedOnTrackSmidStart(): void;
    traceFindTrackIdAndAlbumBasedOnTrackSmidEnd(): void;
    traceAddAlbumAndFindTrackIdBasedOnMetadataStart(): void;
    traceAddAlbumAndFindTrackIdBasedOnMetadataEnd(): void;
    traceAddAudioAlbumStart(): void;
    traceAddAudioAlbumEnd(): void;
    traceFindArtistAndAlbumStart(): void;
    traceFindArtistAndAlbumEnd(): void;
    traceUpdateCurrentAudioAlbumStart(): void;
    traceUpdateCurrentAudioAlbumEnd(): void;
    traceAddPersonLinksStart(): void;
    traceAddPersonLinksEnd(): void;
    traceAddPersonStart(): void;
    traceAddPersonEnd(): void;
    traceAddPersonLinkStart(): void;
    traceAddPersonLinkEnd(): void;
    traceFindAndGetAudioTrackStart(): void;
    traceFindAndGetAudioTrackEnd(): void;
    traceUpdateCurrentTrackStart(): void;
    traceUpdateCurrentTrackEnd(): void;
    traceRecomputeAlbumReleaseYearStart(): void;
    traceRecomputeAlbumReleaseYearEnd(): void;
    traceAddTrackFileStart(): void;
    traceAddTrackFileEnd(): void;
    traceReflectTrackFilesStateStart(): void;
    traceReflectTrackFilesStateEnd(): void;
    traceAddFileStart(): void;
    traceAddFileEnd(): void;
    traceUpdateFileStart(): void;
    traceUpdateFileEnd(): void;
    traceAddFolderStart(): void;
    traceAddFolderEnd(): void;
    traceUpdatePlaylistContentsStart(): void;
    traceUpdatePlaylistContentsEnd(): void;
    traceFoundTrackBySmid(): void;
    traceFoundTrackAndAlbum(albumId: number, artistId: number, trackId: number): void;
    tracePromotingTrackArtist(albumTitle: string): void;
    traceAlbumAsVariousArtists(): void;
    traceAddingAlbum(albumName: string): void;
    traceAddAlbumWithTitleArtist(albumTitle: string, artistId: number): void;
    traceUpdatingAlbum(): void;
    traceAddingPerson(personName: string): void;
    traceUpdatingPerson(personName: string): void;
    traceAddingPersonLink(personId: number, mediaId: number): void;
    traceAddingTrackEntry(albumId: number, trackTitle: string, trackNumber: number): void;
    traceTrackIsAudioBook(): void;
    traceFoundExistingTrack(trackId: number): void;
    traceAddingUnknownArtist(): void;
    traceUpdateAlbumSetGenre(genreId: number): void;
    traceSetUnknownGenre(): void;
    traceAddingTrack(trackName: string): void;
    traceUpdatingTrack(trackName: string): void;
    traceSetTrackRatingFromFile(trackTitle: string, rating: number): void;
    traceSplitExistingFile(oldTrackId: number, newTrackId: number): void;
    traceAddingFolder(folderPath: string): void;
    traceAddingFile(filename: string): void;
    traceUpdatingFile(filename: string): void;
    traceUpdatingFileCounts(): void;
    traceUpdateOldAlbumVisibility(albumId: number): void;
    traceUpdateAlbumVisibility(albumId: number): void;
    traceUpdatingTrackAcquisitionDate(trackId: number): void;
    traceUpdatingAlbumAcquisitionDate(albumId: number): void;
    traceUpdatingPlaylistItemWithMediaId(playlistContentId: number, mediaId: number): void;
}
