// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Microsoft.Media.PlayReadyClient 255.255.255.255 at Wed Mar 31 18:10:04 2021
// </auto-generated>
// --------------------------------------------------

import { IPlayReadyServiceRequest } from "./IPlayReadyServiceRequest";
import { PlayReadySoapMessage } from "./PlayReadySoapMessage";
import { HResult } from "winrt/Windows/Foundation/HResult";
import { IAsyncAction } from "winrt/Windows/Foundation/IAsyncAction";
import { GenerateShim } from "winrt/Windows/Foundation/Interop/GenerateShim";
import { Uri } from "winrt/Windows/Foundation/Uri";
import { IMediaProtectionServiceRequest } from "winrt/Windows/Media/Protection/IMediaProtectionServiceRequest";

@GenerateShim('Microsoft.Media.PlayReadyClient.PlayReadyMeteringReportServiceRequest')
export class PlayReadyMeteringReportServiceRequest implements IPlayReadyServiceRequest, IMediaProtectionServiceRequest { 
    meteringCertificate: number[] = null;
    challengeCustomData: string = null;
    responseCustomData: string = null;
    uri: Uri = null;
    protectionSystem: string = null;
    type: string = null;
    beginServiceRequest(): IAsyncAction {
        throw new Error('PlayReadyMeteringReportServiceRequest#beginServiceRequest not implemented')
    }
    nextServiceRequest(): IPlayReadyServiceRequest {
        throw new Error('PlayReadyMeteringReportServiceRequest#nextServiceRequest not implemented')
    }
    generateManualEnablingChallenge(): PlayReadySoapMessage {
        throw new Error('PlayReadyMeteringReportServiceRequest#generateManualEnablingChallenge not implemented')
    }
    processManualEnablingResponse(responseBytes: number[]): number {
        throw new Error('PlayReadyMeteringReportServiceRequest#processManualEnablingResponse not implemented')
    }
}
