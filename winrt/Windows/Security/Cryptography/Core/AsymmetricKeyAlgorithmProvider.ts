// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:06 2021
// </auto-generated>
// --------------------------------------------------

import { GenerateShim } from "../../../Foundation/Interop/GenerateShim";
import { CryptographicKey } from "./CryptographicKey";
import { CryptographicPrivateKeyBlobType } from "./CryptographicPrivateKeyBlobType";
import { CryptographicPublicKeyBlobType } from "./CryptographicPublicKeyBlobType";
import { IBuffer } from "../../../Storage/Streams/IBuffer";

@GenerateShim('Windows.Security.Cryptography.Core.AsymmetricKeyAlgorithmProvider')
export class AsymmetricKeyAlgorithmProvider { 
    algorithmName: string = null;
    createKeyPair(keySize: number): CryptographicKey {
        throw new Error('AsymmetricKeyAlgorithmProvider#createKeyPair not implemented')
    }
    importDefaultPrivateKeyBlob(keyBlob: IBuffer): CryptographicKey {
        throw new Error('AsymmetricKeyAlgorithmProvider#importDefaultPrivateKeyBlob not implemented')
    }
    importKeyPairWithBlobType(keyBlob: IBuffer, blobType: CryptographicPrivateKeyBlobType): CryptographicKey {
        throw new Error('AsymmetricKeyAlgorithmProvider#importKeyPairWithBlobType not implemented')
    }
    importDefaultPublicKeyBlob(keyBlob: IBuffer): CryptographicKey {
        throw new Error('AsymmetricKeyAlgorithmProvider#importDefaultPublicKeyBlob not implemented')
    }
    importPublicKeyWithBlobType(keyBlob: IBuffer, blobType: CryptographicPublicKeyBlobType): CryptographicKey {
        throw new Error('AsymmetricKeyAlgorithmProvider#importPublicKeyWithBlobType not implemented')
    }
    static openAlgorithm(algorithm: string): AsymmetricKeyAlgorithmProvider {
        throw new Error('AsymmetricKeyAlgorithmProvider#openAlgorithm not implemented')
    }
}
