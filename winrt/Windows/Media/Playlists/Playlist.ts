// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:05 2021
// </auto-generated>
// --------------------------------------------------

import { IVector } from "../../Foundation/Collections/IVector`1";
import { IAsyncAction } from "../../Foundation/IAsyncAction";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { PlaylistFormat } from "./PlaylistFormat";
import { IStorageFile } from "../../Storage/IStorageFile";
import { IStorageFolder } from "../../Storage/IStorageFolder";
import { NameCollisionOption } from "../../Storage/NameCollisionOption";
import { StorageFile } from "../../Storage/StorageFile";

@GenerateShim('Windows.Media.Playlists.Playlist')
export class Playlist { 
    files: IVector<StorageFile> = null;
    saveAsync(): IAsyncAction {
        throw new Error('Playlist#saveAsync not implemented')
    }
    saveAsAsync(saveLocation: IStorageFolder, desiredName: string, option: NameCollisionOption): IAsyncOperation<StorageFile> {
        throw new Error('Playlist#saveAsAsync not implemented')
    }
    saveAsWithFormatAsync(saveLocation: IStorageFolder, desiredName: string, option: NameCollisionOption, playlistFormat: PlaylistFormat): IAsyncOperation<StorageFile> {
        throw new Error('Playlist#saveAsWithFormatAsync not implemented')
    }
    static loadAsync(file: IStorageFile): IAsyncOperation<Playlist> {
        throw new Error('Playlist#loadAsync not implemented')
    }
}
