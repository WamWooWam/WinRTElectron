// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:08 2021
// </auto-generated>
// --------------------------------------------------

import { IIterable } from "../../Foundation/Collections/IIterable`1";
import { IVectorView } from "../../Foundation/Collections/IVectorView`1";
import { DateTime } from "../../Foundation/DateTime";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { Uri } from "../../Foundation/Uri";
import { NotificationSetting } from "./NotificationSetting";
import { PeriodicUpdateRecurrence } from "./PeriodicUpdateRecurrence";
import { ScheduledTileNotification } from "./ScheduledTileNotification";
import { TileNotification } from "./TileNotification";

@GenerateShim('Windows.UI.Notifications.TileUpdater')
export class TileUpdater { 
    setting: NotificationSetting = null;
    update(notification: TileNotification): void {
        console.warn('TileUpdater#update not implemented')
    }
    clear(): void {
        console.warn('TileUpdater#clear not implemented')
    }
    enableNotificationQueue(enable: boolean): void {
        console.warn('TileUpdater#enableNotificationQueue not implemented')
    }
    addToSchedule(scheduledTile: ScheduledTileNotification): void {
        console.warn('TileUpdater#addToSchedule not implemented')
    }
    removeFromSchedule(scheduledTile: ScheduledTileNotification): void {
        console.warn('TileUpdater#removeFromSchedule not implemented')
    }
    getScheduledTileNotifications(): IVectorView<ScheduledTileNotification> {
        throw new Error('TileUpdater#getScheduledTileNotifications not implemented')
    }
    startPeriodicUpdate(tileContent: Uri, requestedInterval: PeriodicUpdateRecurrence): void {
        console.warn('TileUpdater#startPeriodicUpdate not implemented')
    }
    startPeriodicUpdateAtTime(tileContent: Uri, startTime: Date, requestedInterval: PeriodicUpdateRecurrence): void {
        console.warn('TileUpdater#startPeriodicUpdateAtTime not implemented')
    }
    stopPeriodicUpdate(): void {
        console.warn('TileUpdater#stopPeriodicUpdate not implemented')
    }
    startPeriodicUpdateBatch(tileContents: IIterable<Uri>, requestedInterval: PeriodicUpdateRecurrence): void {
        console.warn('TileUpdater#startPeriodicUpdateBatch not implemented')
    }
    startPeriodicUpdateBatchAtTime(tileContents: IIterable<Uri>, startTime: Date, requestedInterval: PeriodicUpdateRecurrence): void {
        console.warn('TileUpdater#startPeriodicUpdateBatchAtTime not implemented')
    }
    enableNotificationQueueForSquare150x150(enable: boolean): void {
        console.warn('TileUpdater#enableNotificationQueueForSquare150x150 not implemented')
    }
    enableNotificationQueueForWide310x150(enable: boolean): void {
        console.warn('TileUpdater#enableNotificationQueueForWide310x150 not implemented')
    }
    enableNotificationQueueForSquare310x310(enable: boolean): void {
        console.warn('TileUpdater#enableNotificationQueueForSquare310x310 not implemented')
    }
}
