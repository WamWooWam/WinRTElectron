// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:00 2021
// </auto-generated>
// --------------------------------------------------

import { DataPackage } from "./DataPackage";
import { DataPackageView } from "./DataPackageView";
import { EventHandler } from "../../Foundation/EventHandler`1";
import { Enumerable } from "../../Foundation/Interop/Enumerable";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { ClipboardPackageView } from "./ClipboardPackageView";

@GenerateShim('Windows.ApplicationModel.DataTransfer.Clipboard')
export class Clipboard { 
    static getContent(): DataPackageView {
        // throw new Error('Clipboard#getContent not implemented')
        return new ClipboardPackageView();
    }
    static setContent(content: DataPackage): void {
        console.warn('Clipboard#setContent not implemented')
    }
    static flush(): void {
        console.warn('Clipboard#flush not implemented')
    }
    static clear(): void {
        console.warn('Clipboard#clear not implemented')
    }

    static __contentChanged: Set<EventHandler<any>> = new Set();
    @Enumerable(true)
    static set oncontentchanged(handler: EventHandler<any>) {
        Clipboard.__contentChanged.add(handler);
    }

    static addEventListener(name: string, handler: any) {
        switch (name) {
            case 'contentchanged':
                Clipboard.__contentChanged.add(handler);
                break;
        }
    }

    static removeEventListener(name: string, handler: any) {
        switch (name) {
            case 'contentchanged':
                Clipboard.__contentChanged.delete(handler);
                break;
        }
    }
}
