// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:00 2021
// </auto-generated>
// --------------------------------------------------

import { IIterable } from "../../Foundation/Collections/IIterable`1";
import { IIterator } from "../../Foundation/Collections/IIterator`1";
import { IKeyValuePair } from "../../Foundation/Collections/IKeyValuePair`2";
import { IMapView } from "../../Foundation/Collections/IMapView`2";
import { IMap } from "../../Foundation/Collections/IMap`2";
import { IVector } from "../../Foundation/Collections/IVector`1";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { Uri } from "../../Foundation/Uri";
import { IRandomAccessStreamReference } from "../../Storage/Streams/IRandomAccessStreamReference";
import { Color } from "../../UI/Color";

@GenerateShim('Windows.ApplicationModel.DataTransfer.DataPackagePropertySet')
export class DataPackagePropertySet implements IMap<string, any>, IIterable<IKeyValuePair<string, any>> { 
    [Symbol.iterator]() {
        return null;
    }

    square30x30Logo: IRandomAccessStreamReference = null;
    packageFamilyName: string = null;
    logoBackgroundColor: Color = null;
    contentSourceWebLink: Uri = null;
    contentSourceApplicationLink: Uri = null;
    title: string = null;
    thumbnail: IRandomAccessStreamReference = null;
    description: string = null;
    applicationName: string = null;
    applicationListingUri: Uri = null;
    fileTypes: IVector<string> = null;
    size: number = null;
    lookup(key: string): any {
        throw new Error('DataPackagePropertySet#lookup not implemented')
    }
    hasKey(key: string): boolean {
        throw new Error('DataPackagePropertySet#hasKey not implemented')
    }
    getView(): IMapView<string, any> {
        throw new Error('DataPackagePropertySet#getView not implemented')
    }
    insert(key: string, value: any): boolean {
        throw new Error('DataPackagePropertySet#insert not implemented')
    }
    remove(key: string): void {
        console.warn('DataPackagePropertySet#remove not implemented')
    }
    clear(): void {
        console.warn('DataPackagePropertySet#clear not implemented')
    }
    first(): IIterator<IKeyValuePair<string, any>> {
        throw new Error('DataPackagePropertySet#first not implemented')
    }
}
