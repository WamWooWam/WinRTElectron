// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:11 2021
// </auto-generated>
// --------------------------------------------------

import { IIterable } from "../../../Foundation/Collections/IIterable`1";
import { IIterator } from "../../../Foundation/Collections/IIterator`1";
import { IKeyValuePair } from "../../../Foundation/Collections/IKeyValuePair`2";
import { IMapView } from "../../../Foundation/Collections/IMapView`2";
import { IMap } from "../../../Foundation/Collections/IMap`2";
import { DateTime } from "../../../Foundation/DateTime";
import { IStringable } from "../../../Foundation/IStringable";
import { GenerateShim } from "../../../Foundation/Interop/GenerateShim";
import { TimeSpan } from "../../../Foundation/TimeSpan";
import { Uri } from "../../../Foundation/Uri";
import { HttpCacheDirectiveHeaderValueCollection } from "./HttpCacheDirectiveHeaderValueCollection";
import { HttpChallengeHeaderValueCollection } from "./HttpChallengeHeaderValueCollection";
import { HttpConnectionOptionHeaderValueCollection } from "./HttpConnectionOptionHeaderValueCollection";
import { HttpDateOrDeltaHeaderValue } from "./HttpDateOrDeltaHeaderValue";
import { HttpMethodHeaderValueCollection } from "./HttpMethodHeaderValueCollection";
import { HttpTransferCodingHeaderValueCollection } from "./HttpTransferCodingHeaderValueCollection";

@GenerateShim('Windows.Web.Http.Headers.HttpResponseHeaderCollection')
export class HttpResponseHeaderCollection implements IMap<string, string>, IIterable<IKeyValuePair<string, string>>, IStringable { 
    [Symbol.iterator]() {
        return null;
    }

    size: number = null;
    retryAfter: HttpDateOrDeltaHeaderValue = null;
    location: Uri = null;
    date: Date | null = null;
    age: number | null = null;
    allow: HttpMethodHeaderValueCollection = null;
    cacheControl: HttpCacheDirectiveHeaderValueCollection = null;
    connection: HttpConnectionOptionHeaderValueCollection = null;
    proxyAuthenticate: HttpChallengeHeaderValueCollection = null;
    transferEncoding: HttpTransferCodingHeaderValueCollection = null;
    wwwAuthenticate: HttpChallengeHeaderValueCollection = null;
    append(name: string, value: string): void {
        console.warn('HttpResponseHeaderCollection#append not implemented')
    }
    tryAppendWithoutValidation(name: string, value: string): boolean {
        throw new Error('HttpResponseHeaderCollection#tryAppendWithoutValidation not implemented')
    }
    lookup(key: string): string {
        throw new Error('HttpResponseHeaderCollection#lookup not implemented')
    }
    hasKey(key: string): boolean {
        throw new Error('HttpResponseHeaderCollection#hasKey not implemented')
    }
    getView(): IMapView<string, string> {
        throw new Error('HttpResponseHeaderCollection#getView not implemented')
    }
    insert(key: string, value: string): boolean {
        throw new Error('HttpResponseHeaderCollection#insert not implemented')
    }
    remove(key: string): void {
        console.warn('HttpResponseHeaderCollection#remove not implemented')
    }
    clear(): void {
        console.warn('HttpResponseHeaderCollection#clear not implemented')
    }
    first(): IIterator<IKeyValuePair<string, string>> {
        throw new Error('HttpResponseHeaderCollection#first not implemented')
    }
    toString(): string {
        throw new Error('HttpResponseHeaderCollection#toString not implemented')
    }
}
