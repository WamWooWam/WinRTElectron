// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:07 2021
// </auto-generated>
// --------------------------------------------------

import { IVectorView } from "../../Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { GenerateShim } from "../../Foundation/Interop/GenerateShim";
import { FileInformation } from "./FileInformation";
import { FolderInformation } from "./FolderInformation";
import { IStorageItemInformation } from "./IStorageItemInformation";
import { ThumbnailMode } from "../FileProperties/ThumbnailMode";
import { ThumbnailOptions } from "../FileProperties/ThumbnailOptions";
import { IStorageQueryResultBase } from "../Search/IStorageQueryResultBase";

@GenerateShim('Windows.Storage.BulkAccess.FileInformationFactory')
export class FileInformationFactory { 
    // constructor(queryResult: IStorageQueryResultBase, mode: ThumbnailMode);
    // constructor(queryResult: IStorageQueryResultBase, mode: ThumbnailMode, requestedThumbnailSize: number);
    // constructor(queryResult: IStorageQueryResultBase, mode: ThumbnailMode, requestedThumbnailSize: number, thumbnailOptions: ThumbnailOptions);
    // constructor(queryResult: IStorageQueryResultBase, mode: ThumbnailMode, requestedThumbnailSize: number, thumbnailOptions: ThumbnailOptions, delayLoad: boolean);
    constructor(...args) { }
    getItemsAsync(startIndex: number, maxItemsToRetrieve: number): IAsyncOperation<IVectorView<IStorageItemInformation>> {
        throw new Error('FileInformationFactory#getItemsAsync not implemented')
    }
    getItemsAsyncDefaultStartAndCount(): IAsyncOperation<IVectorView<IStorageItemInformation>> {
        throw new Error('FileInformationFactory#getItemsAsyncDefaultStartAndCount not implemented')
    }
    getFilesAsync(startIndex: number, maxItemsToRetrieve: number): IAsyncOperation<IVectorView<FileInformation>> {
        throw new Error('FileInformationFactory#getFilesAsync not implemented')
    }
    getFilesAsyncDefaultStartAndCount(): IAsyncOperation<IVectorView<FileInformation>> {
        throw new Error('FileInformationFactory#getFilesAsyncDefaultStartAndCount not implemented')
    }
    getFoldersAsync(startIndex: number, maxItemsToRetrieve: number): IAsyncOperation<IVectorView<FolderInformation>> {
        throw new Error('FileInformationFactory#getFoldersAsync not implemented')
    }
    getFoldersAsyncDefaultStartAndCount(): IAsyncOperation<IVectorView<FolderInformation>> {
        throw new Error('FileInformationFactory#getFoldersAsyncDefaultStartAndCount not implemented')
    }
    getVirtualizedItemsVector(): any {
        throw new Error('FileInformationFactory#getVirtualizedItemsVector not implemented')
    }
    getVirtualizedFilesVector(): any {
        throw new Error('FileInformationFactory#getVirtualizedFilesVector not implemented')
    }
    getVirtualizedFoldersVector(): any {
        throw new Error('FileInformationFactory#getVirtualizedFoldersVector not implemented')
    }
}
