// --------------------------------------------------
// <auto-generated>
//     This code was generated by tswinrt.
//     Generated from Windows 255.255.255.255 at Fri Mar 26 17:23:08 2021
// </auto-generated>
// --------------------------------------------------

import { IVectorView } from "../../Foundation/Collections/IVectorView`1";
import { IAsyncOperation } from "../../Foundation/IAsyncOperation`1";
import { IStorageItem } from "../IStorageItem";
import { CommonFileQuery } from "./CommonFileQuery";
import { CommonFolderQuery } from "./CommonFolderQuery";
import { IndexedState } from "./IndexedState";
import { QueryOptions } from "./QueryOptions";
import { StorageFileQueryResult } from "./StorageFileQueryResult";
import { StorageFolderQueryResult } from "./StorageFolderQueryResult";
import { StorageItemQueryResult } from "./StorageItemQueryResult";
import { StorageFile } from "../StorageFile";
import { StorageFolder } from "../StorageFolder";

export interface IStorageFolderQueryOperations {
    getIndexedStateAsync(): IAsyncOperation<IndexedState>;
    createFileQueryOverloadDefault(): StorageFileQueryResult;
    createFileQuery(query: CommonFileQuery): StorageFileQueryResult;
    createFileQueryWithOptions(queryOptions: QueryOptions): StorageFileQueryResult;
    createFolderQueryOverloadDefault(): StorageFolderQueryResult;
    createFolderQuery(query: CommonFolderQuery): StorageFolderQueryResult;
    createFolderQueryWithOptions(queryOptions: QueryOptions): StorageFolderQueryResult;
    createItemQuery(): StorageItemQueryResult;
    createItemQueryWithOptions(queryOptions: QueryOptions): StorageItemQueryResult;
    getFilesAsync(query?: CommonFileQuery, startIndex?: number, maxItemsToRetrieve?: number): IAsyncOperation<IVectorView<StorageFile>>;
    getFilesAsyncOverloadDefaultStartAndCount(query: CommonFileQuery): IAsyncOperation<IVectorView<StorageFile>>;
    getFoldersAsync(query?: CommonFolderQuery, startIndex?: number, maxItemsToRetrieve?: number): IAsyncOperation<IVectorView<StorageFolder>>;
    getFoldersAsyncOverloadDefaultStartAndCount(query: CommonFolderQuery): IAsyncOperation<IVectorView<StorageFolder>>;
    getItemsAsync(startIndex: number, maxItemsToRetrieve: number): IAsyncOperation<IVectorView<IStorageItem>>;
    areQueryOptionsSupported(queryOptions: QueryOptions): boolean;
    isCommonFolderQuerySupported(query: CommonFolderQuery): boolean;
    isCommonFileQuerySupported(query: CommonFileQuery): boolean;
}
